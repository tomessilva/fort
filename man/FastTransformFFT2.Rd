% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ft_fft2_subclass.R
\name{FastTransformFFT2}
\alias{FastTransformFFT2}
\title{\code{FastTransformFFT2} subclass}
\description{
\code{FastTransformFFT2} subclass

\code{FastTransformFFT2} subclass
}
\details{
A specific implementation of a structured fast transform. Inherits from \code{FastTransform}.

Add additional details here.
}
\section{Super class}{
\code{\link[fort:FastTransform]{fort::FastTransform}} -> \code{FastTransformFFT2}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-FastTransformFFT2-new}{\code{FastTransformFFT2$new()}}
\item \href{#method-FastTransformFFT2-fwd_eval}{\code{FastTransformFFT2$fwd_eval()}}
\item \href{#method-FastTransformFFT2-rev_eval}{\code{FastTransformFFT2$rev_eval()}}
\item \href{#method-FastTransformFFT2-calculate_rev_par}{\code{FastTransformFFT2$calculate_rev_par()}}
\item \href{#method-FastTransformFFT2-clone}{\code{FastTransformFFT2$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="as_matrix"><a href='../../fort/html/FastTransform.html#method-FastTransform-as_matrix'><code>fort::FastTransform$as_matrix()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="evaluate"><a href='../../fort/html/FastTransform.html#method-FastTransform-evaluate'><code>fort::FastTransform$evaluate()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="get_dim"><a href='../../fort/html/FastTransform.html#method-FastTransform-get_dim'><code>fort::FastTransform$get_dim()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="get_inverse"><a href='../../fort/html/FastTransform.html#method-FastTransform-get_inverse'><code>fort::FastTransform$get_inverse()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="get_logdet"><a href='../../fort/html/FastTransform.html#method-FastTransform-get_logdet'><code>fort::FastTransform$get_logdet()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="get_n_par"><a href='../../fort/html/FastTransform.html#method-FastTransform-get_n_par'><code>fort::FastTransform$get_n_par()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="get_ncol"><a href='../../fort/html/FastTransform.html#method-FastTransform-get_ncol'><code>fort::FastTransform$get_ncol()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="get_norm"><a href='../../fort/html/FastTransform.html#method-FastTransform-get_norm'><code>fort::FastTransform$get_norm()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="get_norm_margin"><a href='../../fort/html/FastTransform.html#method-FastTransform-get_norm_margin'><code>fort::FastTransform$get_norm_margin()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="get_nrow"><a href='../../fort/html/FastTransform.html#method-FastTransform-get_nrow'><code>fort::FastTransform$get_nrow()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="get_transpose"><a href='../../fort/html/FastTransform.html#method-FastTransform-get_transpose'><code>fort::FastTransform$get_transpose()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="print"><a href='../../fort/html/FastTransform.html#method-FastTransform-print'><code>fort::FastTransform$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="fort" data-topic="FastTransform" data-id="summary"><a href='../../fort/html/FastTransform.html#method-FastTransform-summary'><code>fort::FastTransform$summary()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FastTransformFFT2-new"></a>}}
\if{latex}{\out{\hypertarget{method-FastTransformFFT2-new}{}}}
\subsection{Method \code{new()}}{
Object creation function. It is recommended
to call the \code{fort()} function with \code{type = "FastTransformFFT2"}
instead of this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FastTransformFFT2$new(dim_in, dim_out, blocksize)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{dim_in}}{Dimensionality of the input for the forward transform.}

\item{\code{dim_out}}{Dimensionality of the output for the forward transform.}

\item{\code{blocksize}}{Dimensionality of the internal transformation
(\emph{must} be a power of 2).}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A matrix with the same number of columns as \code{x}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FastTransformFFT2-fwd_eval"></a>}}
\if{latex}{\out{\hypertarget{method-FastTransformFFT2-fwd_eval}{}}}
\subsection{Method \code{fwd_eval()}}{
Function that performs the forward transform.
Do \emph{not} call this directly unless you know what you are doing:
use the \code{FastTransform$evaluate()} method instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FastTransformFFT2$fwd_eval(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{Input matrix of the \emph{correct} dimensionality}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A matrix with the same number of columns as \code{x}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FastTransformFFT2-rev_eval"></a>}}
\if{latex}{\out{\hypertarget{method-FastTransformFFT2-rev_eval}{}}}
\subsection{Method \code{rev_eval()}}{
Function that performs the inverse transform.
Do \emph{not} call this directly unless you know what you are doing:
use the \code{FastTransform$evaluate()} method instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FastTransformFFT2$rev_eval(x)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{Input matrix of the \emph{correct} dimensionality}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A matrix with the same number of columns as \code{x}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FastTransformFFT2-calculate_rev_par"></a>}}
\if{latex}{\out{\hypertarget{method-FastTransformFFT2-calculate_rev_par}{}}}
\subsection{Method \code{calculate_rev_par()}}{
Function that calculates and caches the parameters
for the inverse transform. Do not call this directly unless you
know what you are doing. If you need the inverse transform, use
the \code{FastTransform$get_inverse()} method instead.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FastTransformFFT2$calculate_rev_par()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-FastTransformFFT2-clone"></a>}}
\if{latex}{\out{\hypertarget{method-FastTransformFFT2-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{FastTransformFFT2$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
