[{"path":"https://tomessilva.github.io/fort/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tomé Silva. Maintainer, author.","code":""},{"path":"https://tomessilva.github.io/fort/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Silva T (2023). fort: Fast Orthogonal Random Transforms R. https://github.com/tomessilva/fort, https://tomessilva.github.io/fort/.","code":"@Manual{,   title = {fort: Fast Orthogonal Random Transforms in R},   author = {Tomé Silva},   year = {2023},   note = {https://github.com/tomessilva/fort, https://tomessilva.github.io/fort/}, }"},{"path":"https://tomessilva.github.io/fort/index.html","id":"fort--fast-orthogonal-random-transforms","dir":"","previous_headings":"","what":"Fast Orthogonal Random Transforms in R","title":"Fast Orthogonal Random Transforms in R","text":"fort package provides convenient access fast structured random linear transforms implemented C++ (via ‘Rcpp’) (least approximately) orthogonal semi-orthogonal, often much faster matrix multiplication, spirit Fastfood, ACDC, HD SD families random structured transforms. Useful algorithms require benefit uncorrelated random projections, fast dimensionality reduction (e.g., Johnson-Lindenstrauss transform) kernel approximation (e.g., random kitchen sinks) methods.","code":""},{"path":"https://tomessilva.github.io/fort/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Fast Orthogonal Random Transforms in R","text":"can install development version fort GitHub : Note: need Rcpp RcppArmadillo packages installed, well working build environment (compile C++ code), order install development version fort.","code":"# install.packages(\"devtools\") devtools::install_github(\"tomessilva/fort\")"},{"path":"https://tomessilva.github.io/fort/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Fast Orthogonal Random Transforms in R","text":"basic example shows use fort practice: comparison using fort transform simple matrix multiplication, terms speed: Note: case, using fort fast transform leads speed-10x compared use matrix multiplication.","code":"library(fort)  (fast_transform <- fort(4)) # fast orthogonal transform from R^4 to R^4 #> fort linear operation: R^4 -> [fft2] -> R^4  matrix_to_transform <- diag(4) # 4 x 4 identity matrix (new_matrix <- fast_transform %*% matrix_to_transform) # transformed matrix #>             [,1]        [,2]        [,3]        [,4] #> [1,]  0.01658196 -0.85400548 -0.14042079 -0.50068122 #> [2,]  0.14042079 -0.50068122  0.01658196  0.85400548 #> [3,] -0.29097292  0.08269119 -0.94622503  0.11469580 #> [4,]  0.94622503  0.11469580 -0.29097292 -0.08269119  (inverse_transform <- solve(fast_transform)) # get inverse transform #> fort linear operation (inverted): R^4 <- [fft2] <- R^4  round(inverse_transform %*% new_matrix, 12) # should recover the identity matrix #>      [,1] [,2] [,3] [,4] #> [1,]    1    0    0    0 #> [2,]    0    1    0    0 #> [3,]    0    0    1    0 #> [4,]    0    0    0    1 library(fort)  matrix_to_transform <- diag(1024) # 1024 x 1024 identity matrix  fast_transform <- fort(1024) # fast orthogonal transform from R^1024 to R^1024 slow_transform <- as.matrix(fast_transform) # the same, but in matrix form  # time it takes for the fast transform system.time(for (i in 1:100) test <- fast_transform %*% matrix_to_transform, gcFirst = TRUE) #>   user  system elapsed  #>   5.50    2.12    8.00  # time it takes for the equivalent slow transform (via matrix multiplication) system.time(for (i in 1:100) test <- slow_transform %*% matrix_to_transform, gcFirst = TRUE) #>   user  system elapsed  #>  70.57    0.61   77.95"},{"path":"https://tomessilva.github.io/fort/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Fast Orthogonal Random Transforms in R","text":"MIT","code":""},{"path":"https://tomessilva.github.io/fort/index.html","id":"useful-links","dir":"","previous_headings":"","what":"Useful links","title":"Fast Orthogonal Random Transforms in R","text":"fort 0.01 package manual (pdf) Random projection (Wikipedia) Johnson-Lindenstrauss lemma (Wikipedia)","code":""},{"path":"https://tomessilva.github.io/fort/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Fast Orthogonal Random Transforms in R","text":"Krzysztof M. Choromanski, Mark Rowland, Adrian Weller. “unreasonable effectiveness structured random orthogonal embeddings.”, NIPS (2017). Felix Xinnan X. Yu, Ananda Theertha Suresh, Krzysztof M. Choromanski, Daniel N. Holtmann-Rice, Sanjiv Kumar. “Orthogonal random features.”, NIPS (2016). Marcin Moczulski, Misha Denil, Jeremy Appleyard, Nando de Freitas. “ACDC: structured efficient linear layer.”, arXiv:1511.05946 (2015). Quoc Le, Tamás Sarlós Alex Smola. “Fastfood - approximating kernel expansions loglinear time.”, ICML (2013). Ali Rahimi, Benjamin Recht. “Random features large-scale kernel machines”, NIPS (2007).","code":""},{"path":"https://tomessilva.github.io/fort/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2023 Tomé Silva Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://tomessilva.github.io/fort/reference/as.matrix.FastTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert fast transform to matrix — as.matrix.FastTransform","title":"Convert fast transform to matrix — as.matrix.FastTransform","text":"Converts fast transform created fort() equivalent matrix form.","code":""},{"path":"https://tomessilva.github.io/fort/reference/as.matrix.FastTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert fast transform to matrix — as.matrix.FastTransform","text":"","code":"# S3 method for FastTransform as.matrix(x, ...)"},{"path":"https://tomessilva.github.io/fort/reference/as.matrix.FastTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert fast transform to matrix — as.matrix.FastTransform","text":"x object class FastTransform, created using fort(). ... Extra parameters (ignored).","code":""},{"path":"https://tomessilva.github.io/fort/reference/as.matrix.FastTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert fast transform to matrix — as.matrix.FastTransform","text":"matrix object equivalent x.","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/as.matrix.FastTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Convert fast transform to matrix — as.matrix.FastTransform","text":"","code":"fast_transform <- fort(4, 15) slow_transform <- as.matrix(fast_transform) fast_result <- fast_transform %*% diag(4) slow_result <- slow_transform %*% diag(4) norm(fast_result - slow_result) # should be small #> [1] 0"},{"path":"https://tomessilva.github.io/fort/reference/determinant.FastTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate the Determinant of a Transform — determinant.FastTransform","title":"Calculate the Determinant of a Transform — determinant.FastTransform","text":"det calculates determinant FastTransform object. determinant returns separately modulus determinant, optionally (default) logarithm scale, sign determinant. input transform (x) square, function fail error.","code":""},{"path":"https://tomessilva.github.io/fort/reference/determinant.FastTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate the Determinant of a Transform — determinant.FastTransform","text":"","code":"# S3 method for FastTransform determinant(x, logarithm = TRUE, ...)"},{"path":"https://tomessilva.github.io/fort/reference/determinant.FastTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate the Determinant of a Transform — determinant.FastTransform","text":"x Object FastTransform type dim_in == dim_out. logarithm Logical. TRUE (default) return logarithm modulus determinant. ... Extra parameters (ignored).","code":""},{"path":"https://tomessilva.github.io/fort/reference/determinant.FastTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate the Determinant of a Transform — determinant.FastTransform","text":"det, determinant x. determinant, output format determinant.matrix().","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/determinant.FastTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate the Determinant of a Transform — determinant.FastTransform","text":"","code":"det(fort(16)) # either 1 or -1 #> [1] 1 determinant(fort(16)) #> $modulus #> [1] -2.220446e-16 #> attr(,\"logarithm\") #> [1] TRUE #>  #> $sign #> [1] 1 #>  #> attr(,\"class\") #> [1] \"det\""},{"path":"https://tomessilva.github.io/fort/reference/dim.FastTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Dimensions of fast transform — dim.FastTransform","title":"Dimensions of fast transform — dim.FastTransform","text":"Retrieves dimensions fast transform created fort() (.e., number rows columns equivalent matrix). returns value one get dim(.matrix()), much efficiently.","code":""},{"path":"https://tomessilva.github.io/fort/reference/dim.FastTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dimensions of fast transform — dim.FastTransform","text":"","code":"# S3 method for FastTransform dim(x)"},{"path":"https://tomessilva.github.io/fort/reference/dim.FastTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dimensions of fast transform — dim.FastTransform","text":"x object class FastTransform, created using fort().","code":""},{"path":"https://tomessilva.github.io/fort/reference/dim.FastTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dimensions of fast transform — dim.FastTransform","text":"vector length 2 containing dimensions fast transform (.e., number rows number columns, order).","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/dim.FastTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dimensions of fast transform — dim.FastTransform","text":"","code":"dim(fort(3, 17)) # should return c(17,3) #> [1] 17  3 dim(t(fort(3, 17))) # should return c(3,17) #> Warning: t() converted FastTransform object into a matrix #> [1]  3 17"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"FastTransform class — FastTransform","title":"FastTransform class — FastTransform","text":"General specification type objects generated fort(), correspond structured linear transforms. Useful objects class must also part subclass extends one specific implementation structured linear transform (e.g., FastTransformFFT1 FastTransformFFT2).","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FastTransform class — FastTransform","text":"generally recommended fields methods described used directly, unless specific reason (e.g., require low-level access objects want use pipe operators). Instead, use fort() typical S3 methods matrices, %*%.FastTransform solve.FastTransform.","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"FastTransform class — FastTransform","text":"inverse Logical. Indicates whether object currently represents forward inverse transform. invertible Logical. Indicates whether inverse transform can also expressed FastTransform object. dim_in Dimensionality input forward transform. dim_out Dimensionality output forward transform. blocksize Dimensionality internal transformation (always power 2). fwd_par List parameters used forward transform. fwd_mtrx Cached matrix representation forward transform. rev_par List parameters used inverse transform. rev_mtrx Cached matrix representation inverse transform. fort_type String indicating type structured transform used. cache_matrix Logical. Indicates whether cache calculated matrices (default TRUE). logdet List cached determinants forward inverse transforms","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FastTransform class — FastTransform","text":"FastTransform$fwd_eval() FastTransform$rev_eval() FastTransform$calculate_rev_par() FastTransform$new() FastTransform$evaluate() FastTransform$get_ncol() FastTransform$get_nrow() FastTransform$get_dim() FastTransform$get_n_par() FastTransform$get_inverse() FastTransform$get_transpose() FastTransform$get_logdet() FastTransform$get_norm() FastTransform$get_norm_margin() FastTransform$as_matrix() FastTransform$print() FastTransform$summary() FastTransform$clone()","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-fwd-eval-","dir":"Reference","previous_headings":"","what":"Method fwd_eval()","title":"FastTransform class — FastTransform","text":"Function performs forward transform. call directly unless know : use FastTransform$evaluate() method instead.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$fwd_eval(x)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransform class — FastTransform","text":"x Input matrix correct dimensionality","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"matrix number columns x.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-rev-eval-","dir":"Reference","previous_headings":"","what":"Method rev_eval()","title":"FastTransform class — FastTransform","text":"Function performs inverse transform. call directly unless know : use FastTransform$evaluate() method instead.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$rev_eval(x)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransform class — FastTransform","text":"x Input matrix correct dimensionality","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"matrix number columns x.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-calculate-rev-par-","dir":"Reference","previous_headings":"","what":"Method calculate_rev_par()","title":"FastTransform class — FastTransform","text":"Function calculates caches parameters inverse transform. call directly unless know . need inverse transform, use FastTransform$get_inverse() method instead.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$calculate_rev_par()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FastTransform class — FastTransform","text":"Raw object creation function. Note calling function result useful object. Instead, call fort() function.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$new(dim_in, dim_out, blocksize)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransform class — FastTransform","text":"dim_in Dimensionality input forward transform. dim_out Dimensionality output forward transform. blocksize Dimensionality internal transformation (must power 2).","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"matrix number columns x.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-evaluate-","dir":"Reference","previous_headings":"","what":"Method evaluate()","title":"FastTransform class — FastTransform","text":"Evaluates result applying transform represented object input matrix x. important provided matrix compatible dimensionality since input validation performed. method compatible use pipe operators (e.g., |> magrittr's %>% %<>% pipe operators).","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$evaluate(x)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransform class — FastTransform","text":"x Input matrix correct dimensionality.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"matrix number columns x.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FastTransform class — FastTransform","text":"","code":"x <- fort(4) # random transform y <- diag(4) # data to transform x %*% y # y transformed by x y |> x$evaluate() # same as previous line"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-get-ncol-","dir":"Reference","previous_headings":"","what":"Method get_ncol()","title":"FastTransform class — FastTransform","text":"Returns number columns linear transform represented object.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$get_ncol()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"numeric value.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-get-nrow-","dir":"Reference","previous_headings":"","what":"Method get_nrow()","title":"FastTransform class — FastTransform","text":"Returns number rows linear transform represented object.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$get_nrow()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"numeric value.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-get-dim-","dir":"Reference","previous_headings":"","what":"Method get_dim()","title":"FastTransform class — FastTransform","text":"Returns dimensions linear transform represented object.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$get_dim()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"numeric vector length 2.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-get-n-par-","dir":"Reference","previous_headings":"","what":"Method get_n_par()","title":"FastTransform class — FastTransform","text":"Returns number parameters required represent linear transform represented object.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$get_n_par()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-7","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"numeric value.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-get-inverse-","dir":"Reference","previous_headings":"","what":"Method get_inverse()","title":"FastTransform class — FastTransform","text":"Returns new FastTransform object represents inverse transform transform represented object.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$get_inverse()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-8","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"new object type FastTransform.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-get-transpose-","dir":"Reference","previous_headings":"","what":"Method get_transpose()","title":"FastTransform class — FastTransform","text":"Returns either FastTransform object represents transpose transform represented object (value invertible field TRUE), equivalent matrix.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$get_transpose()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-9","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"Either new object type FastTransform matrix.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-get-logdet-","dir":"Reference","previous_headings":"","what":"Method get_logdet()","title":"FastTransform class — FastTransform","text":"Returns information determinant transform represented object. Fails dim_in != dim_out. modulus determinant provided log scale.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$get_logdet()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-10","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"type object returned determinant.matrix.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-get-norm-","dir":"Reference","previous_headings":"","what":"Method get_norm()","title":"FastTransform class — FastTransform","text":"Returns norm matrix equivalent linear transform represented object.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$get_norm(type = \"o\")"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransform class — FastTransform","text":"type String indicating type matrix norm calculate, using convention base::norm (default \"o\", corresponds maximum absolute column sum).","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-11","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"numeric value.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-get-norm-margin-","dir":"Reference","previous_headings":"","what":"Method get_norm_margin()","title":"FastTransform class — FastTransform","text":"Returns norms rows (columns) matrix equivalent linear transform represented object.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$get_norm_margin(type = \"2\", by = 1)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransform class — FastTransform","text":"type String indicating type matrix norm calculate, using convention compatible base::norm (default \"2\", corresponds Euclidian norm; use \"o\" L1 norm, \"m\" Inf norm). norms rows calculated default (= 1). calculate norms columns instead, use = 2.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-12","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"vector numeric values.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-as-matrix-","dir":"Reference","previous_headings":"","what":"Method as_matrix()","title":"FastTransform class — FastTransform","text":"Returns matrix equivalent transform represented object.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$as_matrix()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-13","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"matrix.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"FastTransform class — FastTransform","text":"Prints terse information object.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-15","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$print()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-14","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"object (invisibly).","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-summary-","dir":"Reference","previous_headings":"","what":"Method summary()","title":"FastTransform class — FastTransform","text":"Prints verbose information object.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-16","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$summary()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"returns-15","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransform class — FastTransform","text":"object (invisibly).","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FastTransform class — FastTransform","text":"objects class cloneable method.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"usage-17","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransform class — FastTransform","text":"","code":"FastTransform$clone(deep = FALSE)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransform class — FastTransform","text":"deep Whether make deep clone.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FastTransform class — FastTransform","text":"","code":"## ------------------------------------------------ ## Method `FastTransform$evaluate` ## ------------------------------------------------  x <- fort(4) # random transform y <- diag(4) # data to transform x %*% y # y transformed by x #>             [,1]        [,2]       [,3]        [,4] #> [1,] -0.05329079 -0.87361331 0.48093406 -0.05159747 #> [2,]  0.05159747  0.48093406 0.87361331 -0.05329079 #> [3,]  0.74895457 -0.06662478 0.03260897  0.65845641 #> [4,] -0.65845641  0.03260897 0.06662478  0.74895457 y |> x$evaluate() # same as previous line #>             [,1]        [,2]       [,3]        [,4] #> [1,] -0.05329079 -0.87361331 0.48093406 -0.05159747 #> [2,]  0.05159747  0.48093406 0.87361331 -0.05329079 #> [3,]  0.74895457 -0.06662478 0.03260897  0.65845641 #> [4,] -0.65845641  0.03260897 0.06662478  0.74895457"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":null,"dir":"Reference","previous_headings":"","what":"FastTransformFFT1 subclass — FastTransformFFT1","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"FastTransformFFT1 subclass FastTransformFFT1 subclass","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"specific implementation structured fast transform. Inherits FastTransform. particular, fft1 type applies following set operations input (column) vector: Permute/expand (\\(P_1\\)) rows pack complex vector \\(x\\); Apply \\(y = D_2 F D_1 x\\) linear transform, \\(F\\) represents complex FFT, \\(D_i\\) represent diagonal matrices random unitary complex values; Unpack complex vector \\(y\\) real vector permute/contract (\\(P_2\\)) rows. Note transform orthonormal \\(dim\\_in = dim\\_out = blocksize\\) (case, \\(P_1\\) \\(P_2\\) permutations). Otherwise, \\(dim\\_in < blocksize\\), \\(P_1\\) represents expansion (rather permutation), \\(dim\\_out < blocksize\\), \\(P_2\\) represents contraction/decimation (rather permutation). conditions true, resulting transform exactly orthogonal semi-orthogonal, rows columns transform still going generally uncorrelated. recommended methods described called directly. Instead, use methods described fort() documentation, possible, unless positively need low-level access (e.g., speed computation pre-validated inputs).","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"fort::FastTransform -> FastTransformFFT1","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"fort::FastTransform$as_matrix() fort::FastTransform$evaluate() fort::FastTransform$get_dim() fort::FastTransform$get_inverse() fort::FastTransform$get_logdet() fort::FastTransform$get_n_par() fort::FastTransform$get_ncol() fort::FastTransform$get_norm() fort::FastTransform$get_norm_margin() fort::FastTransform$get_nrow() fort::FastTransform$get_transpose() fort::FastTransform$print() fort::FastTransform$summary()","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"FastTransformFFT1$new() FastTransformFFT1$fwd_eval() FastTransformFFT1$rev_eval() FastTransformFFT1$calculate_rev_par() FastTransformFFT1$clone()","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"Object creation function. recommended call fort() function type = \"FastTransformFFT1\", instead method, since input validation performed method.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"","code":"FastTransformFFT1$new(dim_in, dim_out, blocksize)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"dim_in Dimensionality input forward transform. dim_out Dimensionality output forward transform. blocksize Dimensionality internal transformation (must power 2).","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"matrix number columns x.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"method-fwd-eval-","dir":"Reference","previous_headings":"","what":"Method fwd_eval()","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"Function performs forward transform. call directly unless know : use %*%.FastTransform FastTransform$evaluate() methods instead.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"","code":"FastTransformFFT1$fwd_eval(x)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"x Input matrix correct dimensionality","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"matrix number columns x.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"method-rev-eval-","dir":"Reference","previous_headings":"","what":"Method rev_eval()","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"Function performs inverse transform. call directly unless know : use %*%.FastTransform FastTransform$evaluate() methods instead.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"","code":"FastTransformFFT1$rev_eval(x)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"x Input matrix correct dimensionality","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"matrix number columns x.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"method-calculate-rev-par-","dir":"Reference","previous_headings":"","what":"Method calculate_rev_par()","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"Function calculates caches parameters inverse transform. call directly unless know . need inverse transform, use solve.FastTransform FastTransform$get_inverse() methods instead.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"","code":"FastTransformFFT1$calculate_rev_par()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"object (invisibly).","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"objects class cloneable method.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"","code":"FastTransformFFT1$clone(deep = FALSE)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT1.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransformFFT1 subclass — FastTransformFFT1","text":"deep Whether make deep clone.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":null,"dir":"Reference","previous_headings":"","what":"FastTransformFFT2 subclass — FastTransformFFT2","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"FastTransformFFT2 subclass FastTransformFFT2 subclass","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"specific implementation structured fast transform. Inherits FastTransform. particular, fft2 type applies following set operations input (column) vector: Permute/expand (\\(P_1\\)) rows pack complex vector \\(x\\); Apply \\(y = D_3 F D_2 F D_1 x\\) linear transform, \\(F\\) represents complex FFT, \\(D_i\\) represent diagonal matrices random unitary complex values; Unpack complex vector \\(y\\) real vector permute/contract (\\(P_2\\)) rows. Note transform orthonormal \\(dim\\_in = dim\\_out = blocksize\\) (case, \\(P_1\\) \\(P_2\\) permutations). Otherwise, \\(dim\\_in < blocksize\\), \\(P_1\\) represents expansion (rather permutation), \\(dim\\_out < blocksize\\), \\(P_2\\) represents contraction/decimation (rather permutation). conditions true, resulting transform exactly orthogonal semi-orthogonal, rows columns transform still going generally uncorrelated. recommended methods described called directly. Instead, use methods described fort() documentation, possible, unless positively need low-level access (e.g., speed computation pre-validated inputs).","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"fort::FastTransform -> FastTransformFFT2","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"fort::FastTransform$as_matrix() fort::FastTransform$evaluate() fort::FastTransform$get_dim() fort::FastTransform$get_inverse() fort::FastTransform$get_logdet() fort::FastTransform$get_n_par() fort::FastTransform$get_ncol() fort::FastTransform$get_norm() fort::FastTransform$get_norm_margin() fort::FastTransform$get_nrow() fort::FastTransform$get_transpose() fort::FastTransform$print() fort::FastTransform$summary()","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"FastTransformFFT2$new() FastTransformFFT2$fwd_eval() FastTransformFFT2$rev_eval() FastTransformFFT2$calculate_rev_par() FastTransformFFT2$clone()","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"Object creation function. recommended call fort() function type = \"FastTransformFFT2\", instead method, since input validation performed method.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"","code":"FastTransformFFT2$new(dim_in, dim_out, blocksize)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"dim_in Dimensionality input forward transform. dim_out Dimensionality output forward transform. blocksize Dimensionality internal transformation (must power 2).","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"matrix number columns x.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"method-fwd-eval-","dir":"Reference","previous_headings":"","what":"Method fwd_eval()","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"Function performs forward transform. call directly unless know : use %*%.FastTransform FastTransform$evaluate() methods instead.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"","code":"FastTransformFFT2$fwd_eval(x)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"x Input matrix correct dimensionality","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"matrix number columns x.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"method-rev-eval-","dir":"Reference","previous_headings":"","what":"Method rev_eval()","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"Function performs inverse transform. call directly unless know : use %*%.FastTransform FastTransform$evaluate() methods instead.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"","code":"FastTransformFFT2$rev_eval(x)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"x Input matrix correct dimensionality","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"matrix number columns x.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"method-calculate-rev-par-","dir":"Reference","previous_headings":"","what":"Method calculate_rev_par()","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"Function calculates caches parameters inverse transform. call directly unless know . need inverse transform, use solve.FastTransform FastTransform$get_inverse() methods instead.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"","code":"FastTransformFFT2$calculate_rev_par()"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"object (invisibly).","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"objects class cloneable method.","code":""},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"","code":"FastTransformFFT2$clone(deep = FALSE)"},{"path":"https://tomessilva.github.io/fort/reference/FastTransformFFT2.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"FastTransformFFT2 subclass — FastTransformFFT2","text":"deep Whether make deep clone.","code":""},{"path":"https://tomessilva.github.io/fort/reference/fort-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fort: Fast Orthogonal Random Transforms in R — fort-package","title":"fort: Fast Orthogonal Random Transforms in R — fort-package","text":"Provides convenient access fast structured random linear transforms implemented C++ (via 'Rcpp') (least approximately) orthogonal semi-orthogonal, often much faster matrix multiplication. Useful algorithms require benefit uncorrelated random projections, fast dimensionality reduction (e.g., Johnson-Lindenstrauss transform) kernel approximation (e.g., random kitchen sinks) methods.","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/fort-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fort: Fast Orthogonal Random Transforms in R — fort-package","text":"Maintainer: Tomé Silva tome@tomesilva.com (ORCID)","code":""},{"path":"https://tomessilva.github.io/fort/reference/fort.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Fast Orthogonal Random Transform — fort","title":"Create a Fast Orthogonal Random Transform — fort","text":"fort() creates object (inherits class FastTransform) represents fast random \\(\\mathbb{R}^{dim\\_in} \\\\mathbb{R}^{dim\\_out}\\) linear transform. transform orthonormal \\(dim\\_in = dim\\_out\\) power 2, approximately orthogonal semi-orthogonal (sense either \\(W^T W \\approx I_{dim\\_in}\\) \\(W W^T \\approx I_{dim\\_out}\\), \\(W\\) represents transform) otherwise.","code":""},{"path":"https://tomessilva.github.io/fort/reference/fort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Fast Orthogonal Random Transform — fort","text":"","code":"fort(   dim_in,   dim_out = NULL,   type = \"default\",   cache_matrix = TRUE,   seed = NULL )"},{"path":"https://tomessilva.github.io/fort/reference/fort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Fast Orthogonal Random Transform — fort","text":"dim_in Either scalar indicating input dimensionality, vector length 2 indicating input output dimensionality transform (dim_out specified). dim_out scalar indicating output dimensionality transform (required first parameter vector length 2). type string indicating type transform use (optional); current valid options : fft2 (.e. default). cache_matrix Logical controls whether matrices cached .matrix() called; set FALSE saving memory important (optional, default = TRUE). seed set, defines seed used generate random transform (optional, default = NULL).","code":""},{"path":"https://tomessilva.github.io/fort/reference/fort.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Fast Orthogonal Random Transform — fort","text":"object class inherits class FastTransform represents fast linear transform.","code":""},{"path":"https://tomessilva.github.io/fort/reference/fort.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a Fast Orthogonal Random Transform — fort","text":"goal fort() provide easy efficient way calculating fast orthogonal random transforms (dim_in dim_out) semi-orthogonal transforms (dim_in different dim_out) within R, using fast structured transforms (like Fast Fourier Transform Fast Walsh-Hadamard Transform) avoid matrix multiplications, spirit Fastfood (Rahimi et al. (2007)), ACDC (Moczulski et al. (2015)), HD (Yu et al. (2016)) SD (Choromanski et al. (2017)) families random structured transforms. Internally, fort transforms assume blocksize must power 2 smaller max(dim_in, dim_out). resulting transform practically orthonormal \\(dim\\_in = dim\\_out\\) match blocksize transform, practically semi-orthogonal \\(dim\\_in != dim\\_out\\) max(dim_in, dim_out) matches blocksize. Otherwise, properties approximately hold, since output result decimated transform (.e., rows columns transform decorrelated, necessarily orthogonal).","code":""},{"path":"https://tomessilva.github.io/fort/reference/fort.html","id":"fort-transform-types","dir":"Reference","previous_headings":"","what":"fort transform types","title":"Create a Fast Orthogonal Random Transform — fort","text":"specific type transform returned depends value passed type parameter, methods rely alternating applying permutations (complexity \\(O(N)\\)), diagonal scaling matrices (complexity \\(O(N)\\)) structured fast linear transforms (Fast Fourier Transform Fast Walsh-Hadamard Transform, can implemented complexity \\(O(N \\mathrm{log} N)\\)). Thus, becomes possible reduce complexity transforming \\(\\mathbb{R}^N\\) vector \\(O(N^{2})\\) (using matrix multiplication) \\(O(N \\mathrm{log} N)\\). Currently, available options type parameter : default: default option, type specified; currently, assumes fft2 type, subject change (avoid option non-interactive usage); fft1: type fort transform uses Fast Fourier Transform base transform; technical details, see FastTransformFFT1. fft2: type fort transform uses Fast Fourier Transform base transform; technical details, see FastTransformFFT2.","code":""},{"path":"https://tomessilva.github.io/fort/reference/fort.html","id":"using-fort-transforms","dir":"Reference","previous_headings":"","what":"Using fort transforms","title":"Create a Fast Orthogonal Random Transform — fort","text":"practice, apply fast transform columns matrix, use %*% operator output fort() matrix (e.g., fort(4,6) %*% matrix(1:12,4,3) output 6 3 matrix results applying transform left matrix right %*% operator). Objects generated fort() also compatible methods applicable matrix objects, dim(), ncol(), nrow(), solve(), t() det(). Furthermore, object can also easily converted matrices (using .matrix()), required.","code":""},{"path":"https://tomessilva.github.io/fort/reference/fort.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Create a Fast Orthogonal Random Transform — fort","text":"Krzysztof M. Choromanski, Mark Rowland, Adrian Weller. (2017). unreasonable effectiveness structured random orthogonal embeddings. Conference Workshop Neural Information Processing Systems. http://papers.neurips.cc/paper/6626--unreasonable-effectiveness--structured-random-orthogonal-embeddings Felix Xinnan X. Yu, Ananda Theertha Suresh, Krzysztof M. Choromanski, Daniel N. Holtmann-Rice, Sanjiv Kumar. (2016). Orthogonal random features. Conference Workshop Neural Information Processing Systems. http://papers.neurips.cc/paper/6246-orthogonal-random-features Marcin Moczulski, Misha Denil, Jeremy Appleyard, Nando de Freitas. (2015). ACDC: structured efficient linear layer. https://arxiv.org/abs/1511.05946 Quoc Le, Tamás Sarlós Alex Smola. (2013). Fastfood - approximating kernel expansions loglinear time. International Conference Machine Learning. https://proceedings.mlr.press/v28/le13-supp.pdf","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/fort.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Fast Orthogonal Random Transform — fort","text":"","code":"fort(16) # a random orthogonal transform from R^16 to R^16 #> fort linear operation: R^16 <U+2192> [fft2] <U+2192> R^16 fort(5, 33) # a random transform from R^5 to R^33 #> fort linear operation: R^5 <U+2192> [R^64 <U+2192> fft2 <U+2192> R^64] <U+2192> R^33 fort(c(5, 33)) # same as previous line #> fort linear operation: R^5 <U+2192> [R^64 <U+2192> fft2 <U+2192> R^64] <U+2192> R^33 # apply a random orthogonal transformation to the canonical R^4 basis fort(4) %*% diag(4) #>            [,1]        [,2]       [,3]        [,4] #> [1,]  0.1258118  0.68053365  0.5000813 -0.52054210 #> [2,]  0.5000813 -0.52054210 -0.1258118 -0.68053365 #> [3,]  0.8103591  0.03903958  0.2782233  0.51418458 #> [4,] -0.2782233 -0.51418458  0.8103591  0.03903958"},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-grapes-.FastTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a fast transform — %*%.FastTransform","title":"Apply a fast transform — %*%.FastTransform","text":"Applies fast transform created fort() (x) columns conformable matrix (y).","code":""},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-grapes-.FastTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a fast transform — %*%.FastTransform","text":"","code":"# S3 method for FastTransform %*%(x, y)"},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-grapes-.FastTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a fast transform — %*%.FastTransform","text":"x object class FastTransform, created using fort(). y numeric (real) matrix/vector appropriate number rows/elements.","code":""},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-grapes-.FastTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a fast transform — %*%.FastTransform","text":"numeric (real) matrix number columns y.","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-grapes-.FastTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a fast transform — %*%.FastTransform","text":"","code":"Z <- fort(4, 1024) Z %*% matrix(1:2, 4, 3) # output is a 1024 by 3 matrix #>                 [,1]         [,2]         [,3] #>    [1,]  1.597912124  1.597912124  1.597912124 #>    [2,]  0.243950247  0.243950247  0.243950247 #>    [3,] -3.308772840 -3.308772840 -3.308772840 #>    [4,] -1.586558960 -1.586558960 -1.586558960 #>    [5,] -0.847463327 -0.847463327 -0.847463327 #>    [6,]  0.025988280  0.025988280  0.025988280 #>    [7,]  2.368310187  2.368310187  2.368310187 #>    [8,] -0.157591326 -0.157591326 -0.157591326 #>    [9,]  0.223238304  0.223238304  0.223238304 #>   [10,]  0.714766651  0.714766651  0.714766651 #>   [11,] -0.491617495 -0.491617495 -0.491617495 #>   [12,] -1.605591439 -1.605591439 -1.605591439 #>   [13,] -3.193493473 -3.193493473 -3.193493473 #>   [14,] -1.728231723 -1.728231723 -1.728231723 #>   [15,] -0.236766372 -0.236766372 -0.236766372 #>   [16,]  1.757751050  1.757751050  1.757751050 #>   [17,]  1.522262958  1.522262958  1.522262958 #>   [18,]  2.689163792  2.689163792  2.689163792 #>   [19,] -0.447684410 -0.447684410 -0.447684410 #>   [20,] -1.657758365 -1.657758365 -1.657758365 #>   [21,] -1.422439619 -1.422439619 -1.422439619 #>   [22,]  1.818272111  1.818272111  1.818272111 #>   [23,] -0.637114425 -0.637114425 -0.637114425 #>   [24,] -0.986720062 -0.986720062 -0.986720062 #>   [25,] -1.956849168 -1.956849168 -1.956849168 #>   [26,] -2.225505727 -2.225505727 -2.225505727 #>   [27,] -4.310336853 -4.310336853 -4.310336853 #>   [28,] -0.825837325 -0.825837325 -0.825837325 #>   [29,]  1.178010051  1.178010051  1.178010051 #>   [30,] -0.010653942 -0.010653942 -0.010653942 #>   [31,]  2.343461516  2.343461516  2.343461516 #>   [32,]  2.296165167  2.296165167  2.296165167 #>   [33,] -0.073622314 -0.073622314 -0.073622314 #>   [34,]  2.370295264  2.370295264  2.370295264 #>   [35,]  1.280167896  1.280167896  1.280167896 #>   [36,] -2.322484423 -2.322484423 -2.322484423 #>   [37,]  0.641126628  0.641126628  0.641126628 #>   [38,]  1.592355472  1.592355472  1.592355472 #>   [39,]  0.127950175  0.127950175  0.127950175 #>   [40,]  0.375193066  0.375193066  0.375193066 #>   [41,] -1.497124173 -1.497124173 -1.497124173 #>   [42,] -1.215447930 -1.215447930 -1.215447930 #>   [43,]  1.227776359  1.227776359  1.227776359 #>   [44,]  0.804064926  0.804064926  0.804064926 #>   [45,]  2.001158906  2.001158906  2.001158906 #>   [46,]  0.512886003  0.512886003  0.512886003 #>   [47,]  2.015047330  2.015047330  2.015047330 #>   [48,] -2.042216445 -2.042216445 -2.042216445 #>   [49,]  0.405672320  0.405672320  0.405672320 #>   [50,] -2.669679251 -2.669679251 -2.669679251 #>   [51,]  0.426716286  0.426716286  0.426716286 #>   [52,] -1.535807477 -1.535807477 -1.535807477 #>   [53,] -0.233658052 -0.233658052 -0.233658052 #>   [54,]  0.907494524  0.907494524  0.907494524 #>   [55,] -1.873093070 -1.873093070 -1.873093070 #>   [56,] -0.095429974 -0.095429974 -0.095429974 #>   [57,] -0.242559406 -0.242559406 -0.242559406 #>   [58,]  0.692108725  0.692108725  0.692108725 #>   [59,]  0.317765041  0.317765041  0.317765041 #>   [60,] -1.492900698 -1.492900698 -1.492900698 #>   [61,]  1.182587872  1.182587872  1.182587872 #>   [62,] -1.568573062 -1.568573062 -1.568573062 #>   [63,] -0.672608775 -0.672608775 -0.672608775 #>   [64,] -2.230589860 -2.230589860 -2.230589860 #>   [65,] -1.504649470 -1.504649470 -1.504649470 #>   [66,] -1.163371213 -1.163371213 -1.163371213 #>   [67,] -1.966404804 -1.966404804 -1.966404804 #>   [68,] -1.357673297 -1.357673297 -1.357673297 #>   [69,]  1.227480942  1.227480942  1.227480942 #>   [70,] -1.033834431 -1.033834431 -1.033834431 #>   [71,]  0.495951424  0.495951424  0.495951424 #>   [72,] -0.181901282 -0.181901282 -0.181901282 #>   [73,] -0.965652803 -0.965652803 -0.965652803 #>   [74,] -0.505525120 -0.505525120 -0.505525120 #>   [75,]  0.187073366  0.187073366  0.187073366 #>   [76,]  1.689648108  1.689648108  1.689648108 #>   [77,]  1.398681491  1.398681491  1.398681491 #>   [78,] -2.403066784 -2.403066784 -2.403066784 #>   [79,]  3.764333585  3.764333585  3.764333585 #>   [80,]  0.722168734  0.722168734  0.722168734 #>   [81,] -3.213992500 -3.213992500 -3.213992500 #>   [82,]  1.810418831  1.810418831  1.810418831 #>   [83,] -0.564587461 -0.564587461 -0.564587461 #>   [84,]  0.004085061  0.004085061  0.004085061 #>   [85,] -0.023195640 -0.023195640 -0.023195640 #>   [86,]  1.381005986  1.381005986  1.381005986 #>   [87,] -0.653365494 -0.653365494 -0.653365494 #>   [88,] -1.260134603 -1.260134603 -1.260134603 #>   [89,]  0.205601057  0.205601057  0.205601057 #>   [90,]  0.819308417  0.819308417  0.819308417 #>   [91,] -1.555445871 -1.555445871 -1.555445871 #>   [92,]  2.225023636  2.225023636  2.225023636 #>   [93,]  1.322606506  1.322606506  1.322606506 #>   [94,] -1.263570398 -1.263570398 -1.263570398 #>   [95,] -1.220121458 -1.220121458 -1.220121458 #>   [96,] -0.805768562 -0.805768562 -0.805768562 #>   [97,] -0.044829705 -0.044829705 -0.044829705 #>   [98,]  1.549896781  1.549896781  1.549896781 #>   [99,]  1.280836977  1.280836977  1.280836977 #>  [100,] -3.740472688 -3.740472688 -3.740472688 #>  [101,]  1.252934827  1.252934827  1.252934827 #>  [102,] -2.439308718 -2.439308718 -2.439308718 #>  [103,]  0.141185903  0.141185903  0.141185903 #>  [104,]  0.357639449  0.357639449  0.357639449 #>  [105,] -0.510313956 -0.510313956 -0.510313956 #>  [106,]  1.237289754  1.237289754  1.237289754 #>  [107,]  1.227896072  1.227896072  1.227896072 #>  [108,]  1.620952456  1.620952456  1.620952456 #>  [109,] -0.181276704 -0.181276704 -0.181276704 #>  [110,] -0.958759981 -0.958759981 -0.958759981 #>  [111,]  3.978666715  3.978666715  3.978666715 #>  [112,]  0.325595531  0.325595531  0.325595531 #>  [113,] -1.092850926 -1.092850926 -1.092850926 #>  [114,]  0.536699064  0.536699064  0.536699064 #>  [115,] -3.379964047 -3.379964047 -3.379964047 #>  [116,] -2.428994154 -2.428994154 -2.428994154 #>  [117,] -2.590311656 -2.590311656 -2.590311656 #>  [118,]  0.452209757  0.452209757  0.452209757 #>  [119,]  1.338464326  1.338464326  1.338464326 #>  [120,]  0.678519388  0.678519388  0.678519388 #>  [121,] -1.180613773 -1.180613773 -1.180613773 #>  [122,]  2.444724333  2.444724333  2.444724333 #>  [123,]  0.787517418  0.787517418  0.787517418 #>  [124,]  2.188626688  2.188626688  2.188626688 #>  [125,]  2.450672144  2.450672144  2.450672144 #>  [126,]  0.423438407  0.423438407  0.423438407 #>  [127,]  1.454615126  1.454615126  1.454615126 #>  [128,]  0.495545707  0.495545707  0.495545707 #>  [129,] -1.097051475 -1.097051475 -1.097051475 #>  [130,] -1.537473547 -1.537473547 -1.537473547 #>  [131,]  1.997812138  1.997812138  1.997812138 #>  [132,] -1.855679976 -1.855679976 -1.855679976 #>  [133,]  0.754388136  0.754388136  0.754388136 #>  [134,] -1.679287901 -1.679287901 -1.679287901 #>  [135,] -0.941398333 -0.941398333 -0.941398333 #>  [136,]  0.867077964  0.867077964  0.867077964 #>  [137,]  0.663348738  0.663348738  0.663348738 #>  [138,]  1.541931625  1.541931625  1.541931625 #>  [139,]  0.337229431  0.337229431  0.337229431 #>  [140,]  0.522845524  0.522845524  0.522845524 #>  [141,]  1.668974760  1.668974760  1.668974760 #>  [142,]  2.113949509  2.113949509  2.113949509 #>  [143,]  0.408032025  0.408032025  0.408032025 #>  [144,]  2.263625440  2.263625440  2.263625440 #>  [145,] -1.954977685 -1.954977685 -1.954977685 #>  [146,] -0.903232345 -0.903232345 -0.903232345 #>  [147,]  2.967583452  2.967583452  2.967583452 #>  [148,] -0.660272785 -0.660272785 -0.660272785 #>  [149,] -1.966366177 -1.966366177 -1.966366177 #>  [150,]  2.873798844  2.873798844  2.873798844 #>  [151,]  0.186704670  0.186704670  0.186704670 #>  [152,]  0.248466829  0.248466829  0.248466829 #>  [153,] -0.729513758 -0.729513758 -0.729513758 #>  [154,] -0.111038513 -0.111038513 -0.111038513 #>  [155,] -0.327474717 -0.327474717 -0.327474717 #>  [156,] -3.971318214 -3.971318214 -3.971318214 #>  [157,] -2.606185692 -2.606185692 -2.606185692 #>  [158,] -2.282793601 -2.282793601 -2.282793601 #>  [159,]  0.564953328  0.564953328  0.564953328 #>  [160,]  0.077714743  0.077714743  0.077714743 #>  [161,]  2.566398192  2.566398192  2.566398192 #>  [162,] -2.524407501 -2.524407501 -2.524407501 #>  [163,] -1.524971743 -1.524971743 -1.524971743 #>  [164,]  0.241895512  0.241895512  0.241895512 #>  [165,] -4.278337804 -4.278337804 -4.278337804 #>  [166,]  1.027000666  1.027000666  1.027000666 #>  [167,] -2.320606327 -2.320606327 -2.320606327 #>  [168,] -0.511932608 -0.511932608 -0.511932608 #>  [169,]  2.952131947  2.952131947  2.952131947 #>  [170,]  1.080732158  1.080732158  1.080732158 #>  [171,] -0.138588460 -0.138588460 -0.138588460 #>  [172,] -0.490292225 -0.490292225 -0.490292225 #>  [173,] -2.200121636 -2.200121636 -2.200121636 #>  [174,]  1.048859877  1.048859877  1.048859877 #>  [175,] -1.023876784 -1.023876784 -1.023876784 #>  [176,]  1.125364673  1.125364673  1.125364673 #>  [177,]  1.799620076  1.799620076  1.799620076 #>  [178,]  0.976773746  0.976773746  0.976773746 #>  [179,]  0.268735933  0.268735933  0.268735933 #>  [180,] -1.263572572 -1.263572572 -1.263572572 #>  [181,]  0.209049996  0.209049996  0.209049996 #>  [182,]  2.522178516  2.522178516  2.522178516 #>  [183,] -2.070154817 -2.070154817 -2.070154817 #>  [184,]  1.265089249  1.265089249  1.265089249 #>  [185,] -1.132916321 -1.132916321 -1.132916321 #>  [186,]  0.758558634  0.758558634  0.758558634 #>  [187,]  1.615981408  1.615981408  1.615981408 #>  [188,] -0.824985258 -0.824985258 -0.824985258 #>  [189,]  0.152659047  0.152659047  0.152659047 #>  [190,]  0.469640859  0.469640859  0.469640859 #>  [191,] -1.226131318 -1.226131318 -1.226131318 #>  [192,]  0.950417965  0.950417965  0.950417965 #>  [193,]  2.188834088  2.188834088  2.188834088 #>  [194,] -0.344699314 -0.344699314 -0.344699314 #>  [195,]  0.749554984  0.749554984  0.749554984 #>  [196,] -1.115443932 -1.115443932 -1.115443932 #>  [197,]  1.946646037  1.946646037  1.946646037 #>  [198,]  0.589945617  0.589945617  0.589945617 #>  [199,]  3.254114521  3.254114521  3.254114521 #>  [200,]  1.930375361  1.930375361  1.930375361 #>  [201,] -0.182555397 -0.182555397 -0.182555397 #>  [202,]  0.490821033  0.490821033  0.490821033 #>  [203,] -0.096525625 -0.096525625 -0.096525625 #>  [204,] -1.031730813 -1.031730813 -1.031730813 #>  [205,] -0.532499851 -0.532499851 -0.532499851 #>  [206,]  1.353143422  1.353143422  1.353143422 #>  [207,]  0.521292104  0.521292104  0.521292104 #>  [208,] -0.990510302 -0.990510302 -0.990510302 #>  [209,] -1.236616837 -1.236616837 -1.236616837 #>  [210,]  0.636016130  0.636016130  0.636016130 #>  [211,]  0.442971952  0.442971952  0.442971952 #>  [212,]  0.885508914  0.885508914  0.885508914 #>  [213,]  1.717634902  1.717634902  1.717634902 #>  [214,] -0.010981035 -0.010981035 -0.010981035 #>  [215,] -2.260079898 -2.260079898 -2.260079898 #>  [216,] -1.339866782 -1.339866782 -1.339866782 #>  [217,]  0.770881390  0.770881390  0.770881390 #>  [218,] -0.872501242 -0.872501242 -0.872501242 #>  [219,] -0.225288564 -0.225288564 -0.225288564 #>  [220,] -0.018886319 -0.018886319 -0.018886319 #>  [221,] -0.581782259 -0.581782259 -0.581782259 #>  [222,] -0.680585467 -0.680585467 -0.680585467 #>  [223,] -0.486636413 -0.486636413 -0.486636413 #>  [224,]  2.101927702  2.101927702  2.101927702 #>  [225,]  2.253631071  2.253631071  2.253631071 #>  [226,]  0.005641076  0.005641076  0.005641076 #>  [227,] -2.110324053 -2.110324053 -2.110324053 #>  [228,] -0.147512441 -0.147512441 -0.147512441 #>  [229,] -0.891388947 -0.891388947 -0.891388947 #>  [230,]  0.770077459  0.770077459  0.770077459 #>  [231,]  1.129133448  1.129133448  1.129133448 #>  [232,] -0.021670460 -0.021670460 -0.021670460 #>  [233,]  1.748265748  1.748265748  1.748265748 #>  [234,]  0.514428646  0.514428646  0.514428646 #>  [235,] -0.372029847 -0.372029847 -0.372029847 #>  [236,]  1.297346526  1.297346526  1.297346526 #>  [237,] -1.491869390 -1.491869390 -1.491869390 #>  [238,]  0.250344730  0.250344730  0.250344730 #>  [239,]  3.204182646  3.204182646  3.204182646 #>  [240,]  1.664395690  1.664395690  1.664395690 #>  [241,] -2.290620448 -2.290620448 -2.290620448 #>  [242,] -1.222989092 -1.222989092 -1.222989092 #>  [243,] -1.460035673 -1.460035673 -1.460035673 #>  [244,]  2.045643588  2.045643588  2.045643588 #>  [245,] -1.441891881 -1.441891881 -1.441891881 #>  [246,]  1.245300083  1.245300083  1.245300083 #>  [247,]  0.096278941  0.096278941  0.096278941 #>  [248,]  1.253614232  1.253614232  1.253614232 #>  [249,] -0.268438137 -0.268438137 -0.268438137 #>  [250,]  1.423397830  1.423397830  1.423397830 #>  [251,]  1.630554658  1.630554658  1.630554658 #>  [252,] -2.816783336 -2.816783336 -2.816783336 #>  [253,]  3.836355063  3.836355063  3.836355063 #>  [254,] -1.922635733 -1.922635733 -1.922635733 #>  [255,] -0.797851414 -0.797851414 -0.797851414 #>  [256,] -0.289193494 -0.289193494 -0.289193494 #>  [257,]  3.412433875  3.412433875  3.412433875 #>  [258,] -1.229853622 -1.229853622 -1.229853622 #>  [259,]  0.454368747  0.454368747  0.454368747 #>  [260,] -1.895785361 -1.895785361 -1.895785361 #>  [261,]  0.982864035  0.982864035  0.982864035 #>  [262,] -2.684292622 -2.684292622 -2.684292622 #>  [263,] -1.457128363 -1.457128363 -1.457128363 #>  [264,]  0.210784424  0.210784424  0.210784424 #>  [265,] -3.648412520 -3.648412520 -3.648412520 #>  [266,] -1.457730218 -1.457730218 -1.457730218 #>  [267,]  1.857351524  1.857351524  1.857351524 #>  [268,] -1.958773887 -1.958773887 -1.958773887 #>  [269,] -2.541834315 -2.541834315 -2.541834315 #>  [270,] -0.764026822 -0.764026822 -0.764026822 #>  [271,] -0.361978630 -0.361978630 -0.361978630 #>  [272,]  2.781317920  2.781317920  2.781317920 #>  [273,]  2.225655124  2.225655124  2.225655124 #>  [274,] -0.513601687 -0.513601687 -0.513601687 #>  [275,]  0.930500595  0.930500595  0.930500595 #>  [276,] -2.233219973 -2.233219973 -2.233219973 #>  [277,]  0.767552751  0.767552751  0.767552751 #>  [278,] -0.095520755 -0.095520755 -0.095520755 #>  [279,]  2.230548131  2.230548131  2.230548131 #>  [280,]  1.114156559  1.114156559  1.114156559 #>  [281,]  0.791053758  0.791053758  0.791053758 #>  [282,] -1.068868353 -1.068868353 -1.068868353 #>  [283,]  2.079916184  2.079916184  2.079916184 #>  [284,]  0.040123108  0.040123108  0.040123108 #>  [285,] -0.156133177 -0.156133177 -0.156133177 #>  [286,]  0.408145642  0.408145642  0.408145642 #>  [287,] -1.714588168 -1.714588168 -1.714588168 #>  [288,] -1.149758661 -1.149758661 -1.149758661 #>  [289,]  1.370920925  1.370920925  1.370920925 #>  [290,]  4.528531089  4.528531089  4.528531089 #>  [291,]  0.813868944  0.813868944  0.813868944 #>  [292,]  0.333537571  0.333537571  0.333537571 #>  [293,]  0.308047277  0.308047277  0.308047277 #>  [294,] -0.489577887 -0.489577887 -0.489577887 #>  [295,] -1.244986116 -1.244986116 -1.244986116 #>  [296,] -0.237290513 -0.237290513 -0.237290513 #>  [297,]  1.601327884  1.601327884  1.601327884 #>  [298,]  2.932809222  2.932809222  2.932809222 #>  [299,] -0.452130905 -0.452130905 -0.452130905 #>  [300,]  3.856112073  3.856112073  3.856112073 #>  [301,]  0.093711613  0.093711613  0.093711613 #>  [302,] -0.697565867 -0.697565867 -0.697565867 #>  [303,] -1.016416931 -1.016416931 -1.016416931 #>  [304,]  2.079113602  2.079113602  2.079113602 #>  [305,] -1.125667120 -1.125667120 -1.125667120 #>  [306,] -2.219701620 -2.219701620 -2.219701620 #>  [307,]  0.441372355  0.441372355  0.441372355 #>  [308,] -3.912894056 -3.912894056 -3.912894056 #>  [309,] -0.830760345 -0.830760345 -0.830760345 #>  [310,]  1.166474360  1.166474360  1.166474360 #>  [311,] -0.640994255 -0.640994255 -0.640994255 #>  [312,]  2.042584333  2.042584333  2.042584333 #>  [313,] -0.383270536 -0.383270536 -0.383270536 #>  [314,]  1.817959608  1.817959608  1.817959608 #>  [315,] -1.109526901 -1.109526901 -1.109526901 #>  [316,]  1.281733892  1.281733892  1.281733892 #>  [317,] -0.887045366 -0.887045366 -0.887045366 #>  [318,] -0.447035752 -0.447035752 -0.447035752 #>  [319,] -0.208203102 -0.208203102 -0.208203102 #>  [320,] -2.249779024 -2.249779024 -2.249779024 #>  [321,] -0.430485619 -0.430485619 -0.430485619 #>  [322,] -2.409831993 -2.409831993 -2.409831993 #>  [323,] -0.584371449 -0.584371449 -0.584371449 #>  [324,]  1.519324562  1.519324562  1.519324562 #>  [325,] -2.630291064 -2.630291064 -2.630291064 #>  [326,]  0.920472693  0.920472693  0.920472693 #>  [327,]  0.263855721  0.263855721  0.263855721 #>  [328,] -2.206751343 -2.206751343 -2.206751343 #>  [329,]  0.114830277  0.114830277  0.114830277 #>  [330,]  0.605357774  0.605357774  0.605357774 #>  [331,] -1.418712608 -1.418712608 -1.418712608 #>  [332,] -2.724398617 -2.724398617 -2.724398617 #>  [333,]  1.941882901  1.941882901  1.941882901 #>  [ reached getOption(\"max.print\") -- omitted 691 rows ] # the example below works: y is assumed to be a single column vector Z %*% 1:4 # output is a 1024 by 1 matrix #>                 [,1] #>    [1,]  2.033195665 #>    [2,]  0.472411078 #>    [3,] -4.258886807 #>    [4,] -2.775055413 #>    [5,] -3.485099779 #>    [6,] -0.339925837 #>    [7,]  3.909882383 #>    [8,] -2.057321961 #>    [9,] -1.298372882 #>   [10,]  2.322151784 #>   [11,] -0.628144138 #>   [12,] -1.597953049 #>   [13,] -4.746596765 #>   [14,] -3.621319909 #>   [15,] -1.678264798 #>   [16,]  3.400573169 #>   [17,]  2.185030508 #>   [18,]  5.375103370 #>   [19,] -0.575217489 #>   [20,] -2.007238433 #>   [21,] -3.252138064 #>   [22,]  1.725768049 #>   [23,] -1.233710590 #>   [24,] -1.495717721 #>   [25,] -2.733842081 #>   [26,] -3.967897872 #>   [27,] -7.724965110 #>   [28,] -1.521897293 #>   [29,]  2.264940384 #>   [30,] -0.614368142 #>   [31,]  3.381085968 #>   [32,]  4.558031103 #>   [33,] -0.379747045 #>   [34,]  4.282086370 #>   [35,]  2.081370830 #>   [36,] -5.401155954 #>   [37,]  0.599434295 #>   [38,]  1.707226190 #>   [39,] -0.634012833 #>   [40,]  1.434098338 #>   [41,] -1.875464730 #>   [42,] -0.612180266 #>   [43,]  1.667623704 #>   [44,] -0.381337538 #>   [45,]  2.993151725 #>   [46,]  1.629701469 #>   [47,]  2.859065377 #>   [48,] -2.899888634 #>   [49,]  0.313567872 #>   [50,] -8.216177821 #>   [51,]  1.831527750 #>   [52,] -1.797518256 #>   [53,]  0.313651679 #>   [54,]  1.015647869 #>   [55,] -3.298298224 #>   [56,] -1.338680324 #>   [57,] -2.209214386 #>   [58,]  3.427933409 #>   [59,]  0.756987661 #>   [60,] -1.589825330 #>   [61,]  2.830259312 #>   [62,] -1.710445494 #>   [63,]  0.478575970 #>   [64,] -2.933745782 #>   [65,] -3.447964226 #>   [66,] -1.350471864 #>   [67,] -2.233087882 #>   [68,] -3.147283659 #>   [69,]  2.357279333 #>   [70,] -1.652029835 #>   [71,]  0.148018844 #>   [72,] -1.157982512 #>   [73,] -2.822894759 #>   [74,]  1.111169950 #>   [75,] -0.838631471 #>   [76,]  2.103232871 #>   [77,]  2.841415815 #>   [78,] -3.530075341 #>   [79,]  3.949289841 #>   [80,]  0.551087640 #>   [81,] -4.361879489 #>   [82,]  2.763822561 #>   [83,] -0.988734937 #>   [84,] -0.225363514 #>   [85,] -1.340026585 #>   [86,]  3.597126532 #>   [87,] -0.114014392 #>   [88,] -1.121880328 #>   [89,]  0.068375636 #>   [90,]  1.078915670 #>   [91,] -3.140221122 #>   [92,]  3.990538866 #>   [93,]  1.829767926 #>   [94,] -1.627003284 #>   [95,] -1.769460879 #>   [96,] -2.733179691 #>   [97,]  0.839113785 #>   [98,]  2.863621478 #>   [99,]  1.216665578 #>  [100,] -5.625082145 #>  [101,]  0.953546221 #>  [102,] -3.730204728 #>  [103,] -0.688924049 #>  [104,]  0.315349199 #>  [105,] -3.117865111 #>  [106,]  1.802586215 #>  [107,]  1.727290890 #>  [108,]  3.519427779 #>  [109,]  0.146986845 #>  [110,] -2.548830874 #>  [111,]  7.030169171 #>  [112,]  0.426471283 #>  [113,] -3.672104598 #>  [114,]  2.127353787 #>  [115,] -6.551578867 #>  [116,] -4.644316217 #>  [117,] -3.525292337 #>  [118,]  1.131559318 #>  [119,]  2.756816868 #>  [120,]  2.488499882 #>  [121,] -2.341023109 #>  [122,]  3.165653961 #>  [123,]  1.687830715 #>  [124,]  3.383384773 #>  [125,]  3.101896010 #>  [126,]  2.421012028 #>  [127,]  0.880980383 #>  [128,]  1.469819099 #>  [129,] -2.243475626 #>  [130,] -4.084803970 #>  [131,]  2.647710991 #>  [132,] -4.090573707 #>  [133,]  1.300051832 #>  [134,] -4.822393898 #>  [135,] -0.748585059 #>  [136,]  4.071547924 #>  [137,]  0.371019060 #>  [138,]  1.608329378 #>  [139,]  0.449564018 #>  [140,]  0.861530466 #>  [141,]  1.817476580 #>  [142,]  3.377760527 #>  [143,] -0.138617291 #>  [144,]  5.955809689 #>  [145,] -3.824446488 #>  [146,] -1.865469557 #>  [147,]  3.825290282 #>  [148,] -1.904825524 #>  [149,] -3.393914339 #>  [150,]  4.674035765 #>  [151,]  1.190114958 #>  [152,] -1.908858048 #>  [153,] -0.999347398 #>  [154,] -0.019972746 #>  [155,] -0.441141018 #>  [156,] -4.479980395 #>  [157,] -3.841681043 #>  [158,] -2.712809702 #>  [159,]  3.740018519 #>  [160,] -0.552166922 #>  [161,]  4.364361498 #>  [162,] -2.284665930 #>  [163,] -3.614394834 #>  [164,] -1.822492263 #>  [165,] -7.470847728 #>  [166,]  1.398672071 #>  [167,] -4.049513296 #>  [168,] -1.905361447 #>  [169,]  3.685055107 #>  [170,]  2.595539557 #>  [171,] -2.846979301 #>  [172,] -1.606697104 #>  [173,] -3.730169706 #>  [174,]  2.746955378 #>  [175,] -0.968326468 #>  [176,]  3.154147554 #>  [177,]  2.345034850 #>  [178,]  1.505811249 #>  [179,]  0.094551158 #>  [180,] -1.165161973 #>  [181,]  1.654488014 #>  [182,]  5.702697391 #>  [183,] -3.923253719 #>  [184,]  1.652364081 #>  [185,] -1.751518295 #>  [186,]  1.746613907 #>  [187,]  3.180427859 #>  [188,] -1.003749279 #>  [189,] -0.696362824 #>  [190,]  1.241171591 #>  [191,] -1.758762411 #>  [192,] -0.582858956 #>  [193,]  3.073811998 #>  [194,] -1.243508176 #>  [195,] -0.778494615 #>  [196,] -1.224077268 #>  [197,]  4.513820769 #>  [198,] -1.570167946 #>  [199,]  4.740218130 #>  [200,]  2.215159957 #>  [201,]  0.433293355 #>  [202,]  1.663712885 #>  [203,]  0.784153619 #>  [204,] -1.732742340 #>  [205,] -0.698485673 #>  [206,]  2.200775182 #>  [207,]  1.496438099 #>  [208,] -4.221135419 #>  [209,] -2.696421621 #>  [210,]  2.808054786 #>  [211,]  0.875664630 #>  [212,]  0.214317699 #>  [213,]  2.096191092 #>  [214,] -1.902810428 #>  [215,] -5.525289125 #>  [216,] -1.011880103 #>  [217,]  1.447369949 #>  [218,] -2.889283550 #>  [219,] -0.178565741 #>  [220,] -0.769103024 #>  [221,]  0.225453983 #>  [222,] -1.265731396 #>  [223,] -0.180890169 #>  [224,]  4.525256088 #>  [225,]  2.991119318 #>  [226,] -0.215619717 #>  [227,] -1.694847234 #>  [228,] -0.154233853 #>  [229,] -1.169027667 #>  [230,]  1.353026800 #>  [231,]  1.226595031 #>  [232,]  1.182556618 #>  [233,]  1.823000026 #>  [234,]  2.011607175 #>  [235,] -2.619622654 #>  [236,]  2.945664020 #>  [237,] -2.169906687 #>  [238,]  2.345317133 #>  [239,]  4.703276054 #>  [240,]  1.025581370 #>  [241,] -3.608450653 #>  [242,] -1.035323859 #>  [243,] -1.654178763 #>  [244,]  3.518902210 #>  [245,] -3.555506388 #>  [246,]  1.578911685 #>  [247,] -0.061613103 #>  [248,]  2.317883933 #>  [249,] -1.725524029 #>  [250,]  2.950726855 #>  [251,]  3.210413478 #>  [252,] -6.371703509 #>  [253,]  6.943844891 #>  [254,] -1.415802259 #>  [255,] -0.028991528 #>  [256,] -1.226306869 #>  [257,]  5.504905603 #>  [258,] -0.083716623 #>  [259,]  0.045203888 #>  [260,] -3.910355813 #>  [261,]  1.929215527 #>  [262,] -5.199191393 #>  [263,] -0.803721472 #>  [264,]  0.886784257 #>  [265,] -5.671991898 #>  [266,] -3.570335892 #>  [267,]  4.399406562 #>  [268,] -2.505956093 #>  [269,] -3.696864028 #>  [270,] -0.462850448 #>  [271,] -2.165393446 #>  [272,]  5.913262842 #>  [273,]  3.930115070 #>  [274,] -1.849163521 #>  [275,] -0.467961665 #>  [276,] -3.150499152 #>  [277,]  0.898473724 #>  [278,] -1.484273089 #>  [279,]  5.725803936 #>  [280,]  1.300099598 #>  [281,]  1.259429360 #>  [282,] -2.403702991 #>  [283,]  1.167903375 #>  [284,]  0.147019157 #>  [285,]  0.725569528 #>  [286,]  0.096917454 #>  [287,] -2.295329232 #>  [288,] -1.735999840 #>  [289,]  0.359480344 #>  [290,]  7.246265064 #>  [291,]  1.618292495 #>  [292,]  1.140099408 #>  [293,]  2.113453540 #>  [294,]  0.537931277 #>  [295,] -4.544851085 #>  [296,]  1.533273543 #>  [297,]  2.136033664 #>  [298,]  4.898558264 #>  [299,]  0.158176997 #>  [300,]  5.461364986 #>  [301,]  0.597429154 #>  [302,] -1.200169781 #>  [303,]  0.656934572 #>  [304,]  4.519459128 #>  [305,] -2.652984335 #>  [306,] -3.530197924 #>  [307,] -0.825120876 #>  [308,] -5.584472358 #>  [309,] -2.321139276 #>  [310,]  3.408754073 #>  [311,] -0.386943874 #>  [312,]  6.651761243 #>  [313,] -0.610296854 #>  [314,]  2.180178399 #>  [315,] -1.492382414 #>  [316,]  3.833858866 #>  [317,] -1.438237907 #>  [318,] -2.866131168 #>  [319,] -0.503261328 #>  [320,] -2.969770393 #>  [321,] -1.072169646 #>  [322,] -3.880065997 #>  [323,] -1.820816116 #>  [324,]  1.475423987 #>  [325,] -4.124769277 #>  [326,] -1.763805450 #>  [327,]  0.063542765 #>  [328,] -3.420963344 #>  [329,] -0.739634629 #>  [330,]  1.082757316 #>  [331,] -3.863774990 #>  [332,] -4.412350517 #>  [333,]  1.824546810 #>  [334,]  1.681939477 #>  [335,] -1.440647649 #>  [336,]  0.534703737 #>  [337,] -3.058997672 #>  [338,] -1.861837317 #>  [339,] -9.792816416 #>  [340,] -2.312220277 #>  [341,]  1.859006136 #>  [342,] -0.482694224 #>  [343,]  1.426831742 #>  [344,]  2.694519535 #>  [345,] -3.201715597 #>  [346,] -3.182545613 #>  [347,]  3.123284625 #>  [348,] -3.637884023 #>  [349,]  0.540715918 #>  [350,]  0.386597455 #>  [351,] -4.178579476 #>  [352,]  1.842126665 #>  [353,] -3.518034436 #>  [354,] -1.646556981 #>  [355,] -2.659401298 #>  [356,]  0.132761285 #>  [357,] -2.663907791 #>  [358,] -0.341835460 #>  [359,] -4.805725097 #>  [360,]  5.541238749 #>  [361,] -3.773390467 #>  [362,] -0.486710473 #>  [363,] -1.047157297 #>  [364,] -0.556638156 #>  [365,]  5.402038341 #>  [366,]  2.691654292 #>  [367,] -1.999968806 #>  [368,]  2.087533344 #>  [369,] -8.829470628 #>  [370,] -0.650043033 #>  [371,] -1.871028250 #>  [372,]  5.037281659 #>  [373,]  0.347347073 #>  [374,]  1.016716047 #>  [375,] -2.051280978 #>  [376,]  4.436747441 #>  [377,]  2.204392205 #>  [378,]  0.342841763 #>  [379,]  0.295834096 #>  [380,] -2.570730249 #>  [381,]  4.238630526 #>  [382,] -1.469969111 #>  [383,] -5.216518115 #>  [384,]  2.854017148 #>  [385,]  4.467474507 #>  [386,]  1.519861478 #>  [387,] -0.512843266 #>  [388,]  2.333282408 #>  [389,]  0.087039142 #>  [390,]  3.597941640 #>  [391,] -0.415180371 #>  [392,]  3.299559073 #>  [393,]  2.540281385 #>  [394,] -1.433520158 #>  [395,] -0.618603577 #>  [396,]  2.017796958 #>  [397,]  1.540578880 #>  [398,] -2.585970446 #>  [399,] -0.723230004 #>  [400,] -3.097729510 #>  [401,] -0.959656536 #>  [402,]  0.522669449 #>  [403,]  1.069120538 #>  [404,]  0.721886630 #>  [405,]  0.663331514 #>  [406,]  3.476239954 #>  [407,]  0.943099264 #>  [408,]  3.044919579 #>  [409,] -0.445339806 #>  [410,] -1.113237472 #>  [411,] -0.310258387 #>  [412,] -2.268517691 #>  [413,] -4.934383724 #>  [414,] -0.049055531 #>  [415,] -1.163663330 #>  [416,]  4.181508108 #>  [417,]  2.247547208 #>  [418,]  1.684631615 #>  [419,] -6.264574309 #>  [420,] -3.112312250 #>  [421,]  5.678773384 #>  [422,] -0.967029223 #>  [423,] -0.981114263 #>  [424,] -0.785507812 #>  [425,]  2.872071231 #>  [426,] -2.804496290 #>  [427,] -0.015784951 #>  [428,]  1.725425353 #>  [429,]  0.315999154 #>  [430,] -0.087497215 #>  [431,]  1.393157407 #>  [432,]  1.747907989 #>  [433,] -4.739715422 #>  [434,] -0.060508292 #>  [435,] -2.190612217 #>  [436,]  3.514188366 #>  [437,] -3.488004101 #>  [438,]  1.249366227 #>  [439,] -3.389127075 #>  [440,]  0.576905746 #>  [441,]  0.806381046 #>  [442,]  3.628874968 #>  [443,] -0.031100765 #>  [444,] -3.389228583 #>  [445,]  1.873043749 #>  [446,]  2.318091439 #>  [447,] -3.416864255 #>  [448,]  2.309514037 #>  [449,] -1.150151295 #>  [450,]  5.873003800 #>  [451,]  4.594088739 #>  [452,]  3.072408247 #>  [453,]  0.770294292 #>  [454,]  1.180580241 #>  [455,]  3.545636623 #>  [456,]  0.953763388 #>  [457,] -4.502506169 #>  [458,]  0.584707457 #>  [459,]  0.650852819 #>  [460,] -4.146826415 #>  [461,]  3.881089731 #>  [462,] -0.582227197 #>  [463,]  0.142959678 #>  [464,] -3.261717180 #>  [465,] -0.245967352 #>  [466,]  1.359184039 #>  [467,]  1.460964658 #>  [468,] -4.781734390 #>  [469,]  2.964035864 #>  [470,]  0.631212950 #>  [471,]  0.035123544 #>  [472,] -0.764900605 #>  [473,] -3.725299987 #>  [474,] -3.168628797 #>  [475,] -0.269499452 #>  [476,] -1.395837096 #>  [477,]  1.256826625 #>  [478,] -3.536282739 #>  [479,] -4.026774980 #>  [480,]  0.222967117 #>  [481,] -3.212191950 #>  [482,] -2.439068377 #>  [483,] -2.369157609 #>  [484,]  1.557627335 #>  [485,]  1.743760422 #>  [486,] -3.148452195 #>  [487,]  2.590994031 #>  [488,] -2.097349154 #>  [489,] -2.155352760 #>  [490,]  3.214924451 #>  [491,]  0.632006030 #>  [492,]  3.101624434 #>  [493,] -6.202531466 #>  [494,]  2.674112928 #>  [495,] -0.180006590 #>  [496,] -4.459297702 #>  [497,]  2.421186748 #>  [498,]  0.655591591 #>  [499,]  1.319530417 #>  [500,]  0.106625674 #>  [501,]  1.076051405 #>  [502,] -0.629657321 #>  [503,] -2.213917683 #>  [504,]  0.746944529 #>  [505,] -2.756218823 #>  [506,]  1.922708761 #>  [507,]  3.556808274 #>  [508,] -0.926517931 #>  [509,] -0.779555266 #>  [510,]  0.330438189 #>  [511,] -7.438779398 #>  [512,] -3.025356585 #>  [513,] -0.128254069 #>  [514,] -1.815529423 #>  [515,]  1.235288842 #>  [516,] -4.576875774 #>  [517,] -0.290750420 #>  [518,]  1.996151097 #>  [519,] -1.480596127 #>  [520,]  1.420281346 #>  [521,] -0.130845145 #>  [522,]  1.350874018 #>  [523,] -0.411856865 #>  [524,]  1.234450025 #>  [525,]  0.965718787 #>  [526,]  0.103144399 #>  [527,]  0.997191865 #>  [528,]  0.860877012 #>  [529,] -3.565204652 #>  [530,] -0.821614082 #>  [531,]  2.515553307 #>  [532,]  2.680125499 #>  [533,]  0.286643589 #>  [534,]  1.873440503 #>  [535,]  0.595818048 #>  [536,]  2.346146552 #>  [537,] -4.653266196 #>  [538,] -1.305451615 #>  [539,]  1.377519527 #>  [540,] -2.858846020 #>  [541,]  1.798004350 #>  [542,]  1.827999609 #>  [543,] -2.630025974 #>  [544,] -2.532631272 #>  [545,]  0.595251773 #>  [546,]  7.828609151 #>  [547,] -5.083085984 #>  [548,] -2.442460454 #>  [549,]  1.511670339 #>  [550,]  1.591656631 #>  [551,]  2.617096927 #>  [552,]  2.231092240 #>  [553,] -5.723682967 #>  [554,] -2.440309254 #>  [555,] -2.873328965 #>  [556,]  4.303038947 #>  [557,] -1.685442679 #>  [558,] -0.548482956 #>  [559,]  1.129698441 #>  [560,]  1.486858509 #>  [561,]  1.505691022 #>  [562,]  0.642375554 #>  [563,] -0.508718423 #>  [564,]  3.290242540 #>  [565,]  0.882692126 #>  [566,]  1.525237338 #>  [567,] -1.727604653 #>  [568,] -1.115228335 #>  [569,] -1.711403034 #>  [570,]  5.286228951 #>  [571,]  0.364343517 #>  [572,] -4.984205091 #>  [573,] -1.141159660 #>  [574,] -1.564953654 #>  [575,]  0.927727252 #>  [576,] -3.770118467 #>  [577,] -0.106822172 #>  [578,] -1.829147011 #>  [579,]  2.636328328 #>  [580,]  6.734716449 #>  [581,]  0.582436353 #>  [582,] -7.974500112 #>  [583,] -1.337192223 #>  [584,] -2.836622133 #>  [585,]  1.492998202 #>  [586,]  2.792430228 #>  [587,] -2.131581110 #>  [588,] -2.938449103 #>  [589,] -3.551580656 #>  [590,]  3.529272059 #>  [591,] -0.093710461 #>  [592,] -0.805194681 #>  [593,] -3.575765722 #>  [594,] -2.428532100 #>  [595,] -6.178107366 #>  [596,] -2.671473793 #>  [597,] -2.426327795 #>  [598,] -1.566581157 #>  [599,]  0.743602183 #>  [600,] -0.074100915 #>  [601,]  0.169137597 #>  [602,]  3.789390563 #>  [603,] -4.185863196 #>  [604,] -1.537746324 #>  [605,] -3.928580750 #>  [606,]  3.120671210 #>  [607,]  1.394721336 #>  [608,]  1.066516748 #>  [609,] -3.021329497 #>  [610,] -3.560151872 #>  [611,]  3.167288607 #>  [612,]  1.192707309 #>  [613,] -1.439336490 #>  [614,] -0.684655427 #>  [615,] -4.396771781 #>  [616,] -0.362238746 #>  [617,] -0.496785822 #>  [618,] -1.262312426 #>  [619,] -0.754985230 #>  [620,] -0.524636041 #>  [621,]  0.242671551 #>  [622,]  1.794913950 #>  [623,] -3.676550113 #>  [624,] -0.161197425 #>  [625,]  3.476867435 #>  [626,]  3.790598657 #>  [627,]  4.187463630 #>  [628,] -0.196033821 #>  [629,] -1.938213422 #>  [630,]  1.113707237 #>  [631,]  1.065562338 #>  [632,] -0.110803195 #>  [633,]  2.310771032 #>  [634,] -1.046450388 #>  [635,]  3.766346050 #>  [636,] -1.488387605 #>  [637,] -0.373288862 #>  [638,] -1.126328238 #>  [639,]  3.220505839 #>  [640,] -4.188985196 #>  [641,] -2.573871266 #>  [642,]  2.171208240 #>  [643,]  0.786403297 #>  [644,]  2.407739060 #>  [645,] -0.998564797 #>  [646,]  0.783018089 #>  [647,] -0.685494466 #>  [648,] -1.145883774 #>  [649,]  1.188036531 #>  [650,] -2.654938473 #>  [651,]  1.800846177 #>  [652,] -3.191687978 #>  [653,] -0.119730967 #>  [654,] -0.855802245 #>  [655,]  1.257316644 #>  [656,]  1.648115204 #>  [657,]  2.457570184 #>  [658,] -2.408268371 #>  [659,] -2.984000839 #>  [660,] -0.137990451 #>  [661,]  4.722468221 #>  [662,]  1.183501028 #>  [663,]  6.194450406 #>  [664,] -3.237600893 #>  [665,]  0.064793479 #>  [666,] -2.470259214 #>  [667,]  0.617892876 #>  [668,]  0.482533117 #>  [669,]  1.728038920 #>  [670,]  3.109725254 #>  [671,] -1.307157325 #>  [672,]  1.726655447 #>  [673,]  2.439816232 #>  [674,] -3.359695074 #>  [675,] -1.650257942 #>  [676,] -0.109376599 #>  [677,] -1.506117039 #>  [678,]  3.722144559 #>  [679,]  3.479260902 #>  [680,]  2.657042312 #>  [681,]  1.122380767 #>  [682,] -2.812861415 #>  [683,]  1.148757034 #>  [684,] -1.742054610 #>  [685,] -3.588956489 #>  [686,] -6.265748519 #>  [687,]  1.045923827 #>  [688,] -4.366541810 #>  [689,] -3.171718181 #>  [690,] -0.170714664 #>  [691,] -3.439005538 #>  [692,]  4.686105773 #>  [693,] -2.861698782 #>  [694,] -0.572092710 #>  [695,] -3.842504968 #>  [696,]  6.980787867 #>  [697,]  2.525028559 #>  [698,] -0.289267180 #>  [699,] -2.165652854 #>  [700,] -1.883635309 #>  [701,] -3.269196875 #>  [702,] -0.276777768 #>  [703,] -0.643045627 #>  [704,]  0.420671058 #>  [705,] -2.557073898 #>  [706,]  2.007783075 #>  [707,]  0.746472929 #>  [708,] -2.510534813 #>  [709,]  1.100339794 #>  [710,] -6.404294669 #>  [711,]  3.136203356 #>  [712,]  0.619626616 #>  [713,]  1.827180379 #>  [714,]  3.204691010 #>  [715,] -4.472692544 #>  [716,]  2.368512303 #>  [717,]  0.657561331 #>  [718,] -2.461058128 #>  [719,]  2.747420777 #>  [720,]  0.103168623 #>  [721,]  1.443587190 #>  [722,] -1.038053402 #>  [723,] -4.002178693 #>  [724,]  3.712837531 #>  [725,] -5.406745978 #>  [726,] -2.853201418 #>  [727,]  6.562186844 #>  [728,]  1.139724295 #>  [729,]  2.470950078 #>  [730,] -0.218415412 #>  [731,] -2.129732610 #>  [732,]  2.319884142 #>  [733,] -0.175888809 #>  [734,] -2.632238409 #>  [735,]  0.609005291 #>  [736,]  4.844552493 #>  [737,]  4.441875157 #>  [738,]  0.801313818 #>  [739,]  0.909337251 #>  [740,]  4.739727090 #>  [741,] -1.402683630 #>  [742,] -2.197883576 #>  [743,]  1.848226138 #>  [744,] -0.522646022 #>  [745,] -1.600220265 #>  [746,]  2.151596699 #>  [747,]  3.799061064 #>  [748,] -2.713276059 #>  [749,]  2.417157733 #>  [750,]  2.206164338 #>  [751,] -1.802596147 #>  [752,] -1.229707653 #>  [753,] -0.365140531 #>  [754,]  0.510005358 #>  [755,]  1.824482372 #>  [756,] -1.881651144 #>  [757,] -2.941602343 #>  [758,] -3.776046081 #>  [759,]  4.831931548 #>  [760,]  0.350459864 #>  [761,] -2.210007318 #>  [762,]  1.865387284 #>  [763,]  0.043994870 #>  [764,] -0.442495487 #>  [765,] -1.301612541 #>  [766,]  0.875926323 #>  [767,]  4.230010842 #>  [768,]  2.907502786 #>  [769,] -1.492963522 #>  [770,]  2.488637254 #>  [771,] -2.266382809 #>  [772,] -4.690658166 #>  [773,]  4.895598486 #>  [774,]  1.050747867 #>  [775,]  1.914286950 #>  [776,] -1.063621094 #>  [777,]  8.054029511 #>  [778,] -1.003796477 #>  [779,] -0.500867463 #>  [780,]  1.453230274 #>  [781,]  2.185534937 #>  [782,] -1.657559500 #>  [783,]  0.808373296 #>  [784,] -2.928711237 #>  [785,] -0.114858562 #>  [786,]  0.303428855 #>  [787,]  0.523238391 #>  [788,]  0.427771983 #>  [789,]  2.407352176 #>  [790,] -0.348522577 #>  [791,] -0.524262860 #>  [792,] -2.095675153 #>  [793,]  3.099476924 #>  [794,] -1.807585140 #>  [795,] -1.317025029 #>  [796,]  0.280673655 #>  [797,]  0.250780564 #>  [798,] -0.054262723 #>  [799,] -0.560779292 #>  [800,]  4.358955195 #>  [801,] -5.153731306 #>  [802,] -1.445207023 #>  [803,] -0.811909874 #>  [804,] -0.725515407 #>  [805,]  2.375797669 #>  [806,] -0.223544327 #>  [807,] -1.994066861 #>  [808,] -0.559045981 #>  [809,] -0.737093729 #>  [810,]  0.521624394 #>  [811,] -2.993620810 #>  [812,]  0.597868608 #>  [813,] -2.164222362 #>  [814,] -2.412012113 #>  [815,]  0.231650905 #>  [816,]  4.651512073 #>  [817,] -0.438309520 #>  [818,]  0.474470519 #>  [819,] -1.648726141 #>  [820,] -4.376364375 #>  [821,] -0.174694955 #>  [822,] -2.538981100 #>  [823,] -0.152730580 #>  [824,]  2.012227842 #>  [825,] -0.832828023 #>  [826,]  1.621179332 #>  [827,] -4.370961656 #>  [828,]  0.854983124 #>  [829,]  3.446087041 #>  [830,]  2.286655832 #>  [831,]  1.300568850 #>  [832,]  0.683781786 #>  [833,]  2.516213219 #>  [834,]  5.522993175 #>  [835,] -0.881787401 #>  [836,]  0.259510116 #>  [837,]  5.091981915 #>  [838,] -0.201885771 #>  [839,]  0.843207035 #>  [840,]  6.420812712 #>  [841,]  2.533026946 #>  [842,]  2.405597928 #>  [843,] -0.072785037 #>  [844,]  1.370035995 #>  [845,]  0.334911096 #>  [846,]  1.937398757 #>  [847,] -3.249297327 #>  [848,]  5.587378042 #>  [849,]  0.694531797 #>  [850,] -0.978361811 #>  [851,]  2.603328992 #>  [852,]  1.459394965 #>  [853,] -2.607847779 #>  [854,]  2.796139571 #>  [855,]  0.751573280 #>  [856,] -1.931844605 #>  [857,]  3.526226963 #>  [858,]  1.727624070 #>  [859,] -3.146531301 #>  [860,]  0.306862546 #>  [861,]  2.257092927 #>  [862,] -5.232609262 #>  [863,] -5.292578510 #>  [864,] -0.483024245 #>  [865,] -1.744288148 #>  [866,]  2.419561780 #>  [867,] -2.852638058 #>  [868,] -1.301855854 #>  [869,]  0.255783193 #>  [870,] -0.107522029 #>  [871,] -1.544134032 #>  [872,] -0.275400498 #>  [873,] -3.499525450 #>  [874,] -0.191578718 #>  [875,]  2.588870922 #>  [876,] -2.955900595 #>  [877,] -0.197821612 #>  [878,]  1.720096838 #>  [879,] -0.401748881 #>  [880,] -0.687763098 #>  [881,]  0.070021304 #>  [882,]  1.956366404 #>  [883,] -0.763275053 #>  [884,]  4.341054798 #>  [885,] -3.357997883 #>  [886,] -1.680281644 #>  [887,]  2.837620500 #>  [888,]  3.946436905 #>  [889,]  2.264967693 #>  [890,] -3.784462785 #>  [891,]  4.942361935 #>  [892,] -4.964543494 #>  [893,]  4.781368986 #>  [894,]  1.816729591 #>  [895,]  0.672623646 #>  [896,] -2.833590271 #>  [897,] -2.858974677 #>  [898,] -0.802177574 #>  [899,]  0.881107215 #>  [900,]  1.782697987 #>  [901,] -2.509208638 #>  [902,] -3.952057793 #>  [903,] -0.028634342 #>  [904,]  0.396743812 #>  [905,] -0.008593735 #>  [906,] -0.550995885 #>  [907,]  3.461504685 #>  [908,] -3.741418044 #>  [909,] -0.094106102 #>  [910,]  1.823777671 #>  [911,]  4.710056508 #>  [912,] -0.003585088 #>  [913,]  0.775699841 #>  [914,] -0.144401220 #>  [915,] -2.763996878 #>  [916,]  0.126300143 #>  [917,] -2.716198975 #>  [918,] -1.464165681 #>  [919,] -0.546675696 #>  [920,] -2.619044114 #>  [921,] -1.790724664 #>  [922,]  2.524274421 #>  [923,] -6.033155650 #>  [924,]  1.927893244 #>  [925,] -2.038893749 #>  [926,] -4.224622606 #>  [927,]  1.396826085 #>  [928,]  2.120411147 #>  [929,]  0.611422485 #>  [930,] -2.284424404 #>  [931,]  4.326595449 #>  [932,]  1.474687201 #>  [933,] -2.656114188 #>  [934,]  5.679294627 #>  [935,] -0.414982319 #>  [936,]  1.034701818 #>  [937,]  2.965757210 #>  [938,] -2.339728075 #>  [939,]  3.842850525 #>  [940,]  0.482717392 #>  [941,] -1.161274587 #>  [942,] -2.768499528 #>  [943,] -0.083469158 #>  [944,]  3.287760320 #>  [945,] -1.055637636 #>  [946,] -2.062131867 #>  [947,] -0.044751546 #>  [948,] -2.928848761 #>  [949,]  2.149483979 #>  [950,] -1.027954703 #>  [951,]  1.008520214 #>  [952,]  0.134780592 #>  [953,]  2.308467136 #>  [954,]  3.168369724 #>  [955,]  2.757309394 #>  [956,]  0.452194513 #>  [957,] -3.230231247 #>  [958,] -0.477692240 #>  [959,] -3.341333177 #>  [960,]  4.178496652 #>  [961,] -1.900353350 #>  [962,]  0.273691693 #>  [963,]  2.969001543 #>  [964,] -4.306997541 #>  [965,] -5.004508224 #>  [966,]  6.811104666 #>  [967,]  1.246641812 #>  [968,] -2.737290456 #>  [969,] -1.900209452 #>  [970,] -0.491265725 #>  [971,] -4.049442387 #>  [972,] -1.052290377 #>  [973,] -0.154586880 #>  [974,] -0.231829230 #>  [975,] -5.627461136 #>  [976,] -1.697653532 #>  [977,] -4.554954449 #>  [978,] -4.740135248 #>  [979,] -1.239066413 #>  [980,]  1.159722256 #>  [981,] -0.948296054 #>  [982,] -5.053600835 #>  [983,] -2.188426986 #>  [984,]  1.159950120 #>  [985,] -1.761801138 #>  [986,] -3.780882034 #>  [987,] -1.879139264 #>  [988,] -2.354643470 #>  [989,] -3.457193792 #>  [990,] -1.191000954 #>  [991,]  0.404185469 #>  [992,] -3.334506092 #>  [993,]  4.499562224 #>  [994,]  3.188147695 #>  [995,]  0.922634387 #>  [996,]  1.064298870 #>  [997,] -1.721210604 #>  [998,]  1.350266943 #>  [999,]  3.202215549 #> [1000,] -3.720703305 #>  [ reached getOption(\"max.print\") -- omitted 24 rows ]"},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-times-times-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Unsafely apply a fast transform — %***%","title":"Unsafely apply a fast transform — %***%","text":"Applies fast transform created fort() (x) columns conformable matrix (y), typically equivalent use %*% operator, using unsafe method.","code":""},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-times-times-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unsafely apply a fast transform — %***%","text":"","code":"x %***% y"},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-times-times-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unsafely apply a fast transform — %***%","text":"x object class FastTransform, created using fort(). y numeric (real) matrix/vector appropriate number rows/elements.","code":""},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-times-times-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unsafely apply a fast transform — %***%","text":"numeric (real) matrix number columns y.","code":""},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-times-times-grapes.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Unsafely apply a fast transform — %***%","text":"operator works similar way %*%, avoids dispatching perform type validation inputs, order reduce overhead performing repeated operations inside function pre-validated inputs. recommended operator used interactively /non-validated inputs.","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/grapes-times-times-times-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unsafely apply a fast transform — %***%","text":"","code":"Z <- fort(4, 1024) Z %*% matrix(1:2, 4, 3) # output is a 1024 by 3 matrix #>                  [,1]          [,2]          [,3] #>    [1,]  1.5613544682  1.5613544682  1.5613544682 #>    [2,] -0.3320104579 -0.3320104579 -0.3320104579 #>    [3,]  0.8668842716  0.8668842716  0.8668842716 #>    [4,] -0.7398596545 -0.7398596545 -0.7398596545 #>    [5,] -0.1376359193 -0.1376359193 -0.1376359193 #>    [6,]  1.7237865698  1.7237865698  1.7237865698 #>    [7,]  1.3897231515  1.3897231515  1.3897231515 #>    [8,] -1.9152729029 -1.9152729029 -1.9152729029 #>    [9,]  0.6415221947  0.6415221947  0.6415221947 #>   [10,] -0.5284129688 -0.5284129688 -0.5284129688 #>   [11,]  2.1679802577  2.1679802577  2.1679802577 #>   [12,]  0.5683097854  0.5683097854  0.5683097854 #>   [13,]  0.9667882925  0.9667882925  0.9667882925 #>   [14,] -0.5683727607 -0.5683727607 -0.5683727607 #>   [15,] -1.0479279654 -1.0479279654 -1.0479279654 #>   [16,]  3.1886983541  3.1886983541  3.1886983541 #>   [17,]  0.4394593067  0.4394593067  0.4394593067 #>   [18,]  0.2044191402  0.2044191402  0.2044191402 #>   [19,] -0.6096750580 -0.6096750580 -0.6096750580 #>   [20,]  2.2264269143  2.2264269143  2.2264269143 #>   [21,]  3.0123957473  3.0123957473  3.0123957473 #>   [22,]  1.4782326758  1.4782326758  1.4782326758 #>   [23,]  0.8118464222  0.8118464222  0.8118464222 #>   [24,] -0.1950520311 -0.1950520311 -0.1950520311 #>   [25,]  0.8490572123  0.8490572123  0.8490572123 #>   [26,] -3.4734440566 -3.4734440566 -3.4734440566 #>   [27,]  0.2810872077  0.2810872077  0.2810872077 #>   [28,] -0.3771254591 -0.3771254591 -0.3771254591 #>   [29,] -1.4815310660 -1.4815310660 -1.4815310660 #>   [30,]  1.3326792632  1.3326792632  1.3326792632 #>   [31,] -1.2742775921 -1.2742775921 -1.2742775921 #>   [32,]  0.1777682140  0.1777682140  0.1777682140 #>   [33,]  0.2185260920  0.2185260920  0.2185260920 #>   [34,] -1.2163687114 -1.2163687114 -1.2163687114 #>   [35,]  0.6228953122  0.6228953122  0.6228953122 #>   [36,]  0.2529646011  0.2529646011  0.2529646011 #>   [37,] -2.1043140245 -2.1043140245 -2.1043140245 #>   [38,]  3.8380474673  3.8380474673  3.8380474673 #>   [39,] -2.4498752154 -2.4498752154 -2.4498752154 #>   [40,] -1.8330793286 -1.8330793286 -1.8330793286 #>   [41,]  0.9068227069  0.9068227069  0.9068227069 #>   [42,] -0.9024840440 -0.9024840440 -0.9024840440 #>   [43,]  0.7275018182  0.7275018182  0.7275018182 #>   [44,] -1.3145477135 -1.3145477135 -1.3145477135 #>   [45,] -2.0395530640 -2.0395530640 -2.0395530640 #>   [46,]  1.6364728773  1.6364728773  1.6364728773 #>   [47,]  0.6330070047  0.6330070047  0.6330070047 #>   [48,] -2.9606394303 -2.9606394303 -2.9606394303 #>   [49,]  0.8083671424  0.8083671424  0.8083671424 #>   [50,]  0.2923357460  0.2923357460  0.2923357460 #>   [51,] -1.1102995626 -1.1102995626 -1.1102995626 #>   [52,] -1.2754148978 -1.2754148978 -1.2754148978 #>   [53,] -0.4535699157 -0.4535699157 -0.4535699157 #>   [54,] -2.0216098431 -2.0216098431 -2.0216098431 #>   [55,] -0.6312400499 -0.6312400499 -0.6312400499 #>   [56,] -0.3780396889 -0.3780396889 -0.3780396889 #>   [57,] -0.3597033226 -0.3597033226 -0.3597033226 #>   [58,] -2.0864963418 -2.0864963418 -2.0864963418 #>   [59,]  0.2755661184  0.2755661184  0.2755661184 #>   [60,] -2.5713056260 -2.5713056260 -2.5713056260 #>   [61,] -2.1428644037 -2.1428644037 -2.1428644037 #>   [62,] -0.1873421487 -0.1873421487 -0.1873421487 #>   [63,]  1.7672687067  1.7672687067  1.7672687067 #>   [64,]  0.0710875262  0.0710875262  0.0710875262 #>   [65,]  1.9140477524  1.9140477524  1.9140477524 #>   [66,]  0.5233215242  0.5233215242  0.5233215242 #>   [67,] -2.3342821702 -2.3342821702 -2.3342821702 #>   [68,]  1.6856750817  1.6856750817  1.6856750817 #>   [69,] -0.5699913000 -0.5699913000 -0.5699913000 #>   [70,]  1.2572466741  1.2572466741  1.2572466741 #>   [71,]  0.5881237729  0.5881237729  0.5881237729 #>   [72,] -2.4256097823 -2.4256097823 -2.4256097823 #>   [73,]  0.9202203436  0.9202203436  0.9202203436 #>   [74,] -1.5387447210 -1.5387447210 -1.5387447210 #>   [75,] -0.0104291836 -0.0104291836 -0.0104291836 #>   [76,]  0.8396740390  0.8396740390  0.8396740390 #>   [77,]  2.2552764552  2.2552764552  2.2552764552 #>   [78,] -0.2884830335 -0.2884830335 -0.2884830335 #>   [79,] -1.6577154347 -1.6577154347 -1.6577154347 #>   [80,] -0.6717310682 -0.6717310682 -0.6717310682 #>   [81,]  1.9882907244  1.9882907244  1.9882907244 #>   [82,]  1.0015226282  1.0015226282  1.0015226282 #>   [83,]  0.0725748399  0.0725748399  0.0725748399 #>   [84,] -1.2166789870 -1.2166789870 -1.2166789870 #>   [85,]  1.3986873146  1.3986873146  1.3986873146 #>   [86,]  1.8524652725  1.8524652725  1.8524652725 #>   [87,] -1.0337976814 -1.0337976814 -1.0337976814 #>   [88,]  0.1656457054  0.1656457054  0.1656457054 #>   [89,]  0.6382953580  0.6382953580  0.6382953580 #>   [90,] -3.0884964319 -3.0884964319 -3.0884964319 #>   [91,] -1.4259958269 -1.4259958269 -1.4259958269 #>   [92,] -2.8196294519 -2.8196294519 -2.8196294519 #>   [93,]  1.5391727682  1.5391727682  1.5391727682 #>   [94,]  1.4417293899  1.4417293899  1.4417293899 #>   [95,]  1.5480195197  1.5480195197  1.5480195197 #>   [96,] -2.0876635433 -2.0876635433 -2.0876635433 #>   [97,]  1.5763568064  1.5763568064  1.5763568064 #>   [98,]  0.4113960130  0.4113960130  0.4113960130 #>   [99,] -0.4746246570 -0.4746246570 -0.4746246570 #>  [100,] -1.0675753250 -1.0675753250 -1.0675753250 #>  [101,]  0.2337661640  0.2337661640  0.2337661640 #>  [102,] -2.1976169093 -2.1976169093 -2.1976169093 #>  [103,] -0.2742653864 -0.2742653864 -0.2742653864 #>  [104,]  1.7367123273  1.7367123273  1.7367123273 #>  [105,]  1.0300807222  1.0300807222  1.0300807222 #>  [106,]  0.3614069713  0.3614069713  0.3614069713 #>  [107,]  0.5586422250  0.5586422250  0.5586422250 #>  [108,] -0.0045459702 -0.0045459702 -0.0045459702 #>  [109,] -0.4563865191 -0.4563865191 -0.4563865191 #>  [110,] -0.9174921505 -0.9174921505 -0.9174921505 #>  [111,] -0.0664723090 -0.0664723090 -0.0664723090 #>  [112,] -1.6897189380 -1.6897189380 -1.6897189380 #>  [113,]  1.1241750655  1.1241750655  1.1241750655 #>  [114,] -0.4774490437 -0.4774490437 -0.4774490437 #>  [115,] -1.8865987134 -1.8865987134 -1.8865987134 #>  [116,]  2.7774988520  2.7774988520  2.7774988520 #>  [117,]  1.8179062591  1.8179062591  1.8179062591 #>  [118,]  1.3220224143  1.3220224143  1.3220224143 #>  [119,] -1.5345998739 -1.5345998739 -1.5345998739 #>  [120,] -2.1030821378 -2.1030821378 -2.1030821378 #>  [121,]  2.5946400267  2.5946400267  2.5946400267 #>  [122,] -4.7753677692 -4.7753677692 -4.7753677692 #>  [123,] -0.3836723087 -0.3836723087 -0.3836723087 #>  [124,] -2.2632443070 -2.2632443070 -2.2632443070 #>  [125,] -0.4663961904 -0.4663961904 -0.4663961904 #>  [126,] -2.1355112622 -2.1355112622 -2.1355112622 #>  [127,] -0.9281483502 -0.9281483502 -0.9281483502 #>  [128,]  0.9167997606  0.9167997606  0.9167997606 #>  [129,]  4.6041839635  4.6041839635  4.6041839635 #>  [130,]  2.4280816863  2.4280816863  2.4280816863 #>  [131,]  0.4361540840  0.4361540840  0.4361540840 #>  [132,]  2.1458239306  2.1458239306  2.1458239306 #>  [133,]  2.9002416661  2.9002416661  2.9002416661 #>  [134,] -1.0878517361 -1.0878517361 -1.0878517361 #>  [135,] -2.3466815636 -2.3466815636 -2.3466815636 #>  [136,]  0.0765932579  0.0765932579  0.0765932579 #>  [137,] -0.7458960933 -0.7458960933 -0.7458960933 #>  [138,]  1.0229575382  1.0229575382  1.0229575382 #>  [139,] -1.4404611367 -1.4404611367 -1.4404611367 #>  [140,]  1.4656138020  1.4656138020  1.4656138020 #>  [141,]  2.2989469212  2.2989469212  2.2989469212 #>  [142,]  1.5973241005  1.5973241005  1.5973241005 #>  [143,]  1.9641286704  1.9641286704  1.9641286704 #>  [144,] -0.3357856563 -0.3357856563 -0.3357856563 #>  [145,]  1.9773566057  1.9773566057  1.9773566057 #>  [146,]  0.1287231450  0.1287231450  0.1287231450 #>  [147,] -0.7109526039 -0.7109526039 -0.7109526039 #>  [148,]  1.9910088607  1.9910088607  1.9910088607 #>  [149,]  2.5609953398  2.5609953398  2.5609953398 #>  [150,]  0.1846389978  0.1846389978  0.1846389978 #>  [151,]  2.4080010470  2.4080010470  2.4080010470 #>  [152,] -1.6844947416 -1.6844947416 -1.6844947416 #>  [153,]  0.9448002129  0.9448002129  0.9448002129 #>  [154,] -1.2660624928 -1.2660624928 -1.2660624928 #>  [155,]  0.7908321404  0.7908321404  0.7908321404 #>  [156,]  0.1122207271  0.1122207271  0.1122207271 #>  [157,] -1.8587628317 -1.8587628317 -1.8587628317 #>  [158,] -1.5071530601 -1.5071530601 -1.5071530601 #>  [159,]  1.8739990455  1.8739990455  1.8739990455 #>  [160,]  3.4279757551  3.4279757551  3.4279757551 #>  [161,]  0.6638520569  0.6638520569  0.6638520569 #>  [162,]  0.0482050973  0.0482050973  0.0482050973 #>  [163,] -1.8681684237 -1.8681684237 -1.8681684237 #>  [164,]  0.7814157375  0.7814157375  0.7814157375 #>  [165,]  0.5871628678  0.5871628678  0.5871628678 #>  [166,]  1.6588656773  1.6588656773  1.6588656773 #>  [167,]  0.6844394330  0.6844394330  0.6844394330 #>  [168,] -0.1454636125 -0.1454636125 -0.1454636125 #>  [169,]  1.3276212229  1.3276212229  1.3276212229 #>  [170,]  0.0619293020  0.0619293020  0.0619293020 #>  [171,]  1.0790231890  1.0790231890  1.0790231890 #>  [172,] -1.8032760330 -1.8032760330 -1.8032760330 #>  [173,]  1.8690920410  1.8690920410  1.8690920410 #>  [174,]  0.8774310172  0.8774310172  0.8774310172 #>  [175,] -0.9302953803 -0.9302953803 -0.9302953803 #>  [176,] -1.0516304506 -1.0516304506 -1.0516304506 #>  [177,]  0.2979350013  0.2979350013  0.2979350013 #>  [178,]  0.0774877238  0.0774877238  0.0774877238 #>  [179,]  1.3667734939  1.3667734939  1.3667734939 #>  [180,] -2.2378580767 -2.2378580767 -2.2378580767 #>  [181,]  1.1909175856  1.1909175856  1.1909175856 #>  [182,]  0.0974681958  0.0974681958  0.0974681958 #>  [183,]  0.0210380793  0.0210380793  0.0210380793 #>  [184,]  1.2797856428  1.2797856428  1.2797856428 #>  [185,] -0.9273881962 -0.9273881962 -0.9273881962 #>  [186,]  0.1859988516  0.1859988516  0.1859988516 #>  [187,]  2.0667993880  2.0667993880  2.0667993880 #>  [188,]  2.1246689578  2.1246689578  2.1246689578 #>  [189,] -1.2790586279 -1.2790586279 -1.2790586279 #>  [190,] -0.2392797032 -0.2392797032 -0.2392797032 #>  [191,]  1.8106317160  1.8106317160  1.8106317160 #>  [192,] -2.4902887890 -2.4902887890 -2.4902887890 #>  [193,] -2.0283650108 -2.0283650108 -2.0283650108 #>  [194,]  1.2366519827  1.2366519827  1.2366519827 #>  [195,] -0.4649959637 -0.4649959637 -0.4649959637 #>  [196,] -0.8386175992 -0.8386175992 -0.8386175992 #>  [197,]  0.7275400452  0.7275400452  0.7275400452 #>  [198,]  0.5606813444  0.5606813444  0.5606813444 #>  [199,]  1.5484212996  1.5484212996  1.5484212996 #>  [200,]  4.1495994996  4.1495994996  4.1495994996 #>  [201,]  0.3538982774  0.3538982774  0.3538982774 #>  [202,] -3.9271254191 -3.9271254191 -3.9271254191 #>  [203,] -0.8052943021 -0.8052943021 -0.8052943021 #>  [204,]  3.0247217767  3.0247217767  3.0247217767 #>  [205,]  1.3831006767  1.3831006767  1.3831006767 #>  [206,] -2.9330780345 -2.9330780345 -2.9330780345 #>  [207,] -1.1549787549 -1.1549787549 -1.1549787549 #>  [208,] -1.2516783106 -1.2516783106 -1.2516783106 #>  [209,]  1.9514733444  1.9514733444  1.9514733444 #>  [210,]  0.2379130054  0.2379130054  0.2379130054 #>  [211,] -1.1982540108 -1.1982540108 -1.1982540108 #>  [212,]  1.7346093749  1.7346093749  1.7346093749 #>  [213,]  0.6102780971  0.6102780971  0.6102780971 #>  [214,] -0.0169038270 -0.0169038270 -0.0169038270 #>  [215,]  2.6425404146  2.6425404146  2.6425404146 #>  [216,]  0.2319015951  0.2319015951  0.2319015951 #>  [217,]  0.1306587529  0.1306587529  0.1306587529 #>  [218,]  0.2159798566  0.2159798566  0.2159798566 #>  [219,]  1.8741904597  1.8741904597  1.8741904597 #>  [220,] -1.1373311223 -1.1373311223 -1.1373311223 #>  [221,]  0.2867476303  0.2867476303  0.2867476303 #>  [222,] -3.3167651869 -3.3167651869 -3.3167651869 #>  [223,] -0.6472349037 -0.6472349037 -0.6472349037 #>  [224,]  0.8703245665  0.8703245665  0.8703245665 #>  [225,] -0.6981325003 -0.6981325003 -0.6981325003 #>  [226,]  0.5889908768  0.5889908768  0.5889908768 #>  [227,] -2.3865063159 -2.3865063159 -2.3865063159 #>  [228,] -0.2491391371 -0.2491391371 -0.2491391371 #>  [229,]  0.1036564266  0.1036564266  0.1036564266 #>  [230,]  2.0300800181  2.0300800181  2.0300800181 #>  [231,]  2.7195292403  2.7195292403  2.7195292403 #>  [232,] -0.7839505791 -0.7839505791 -0.7839505791 #>  [233,]  1.0316857345  1.0316857345  1.0316857345 #>  [234,]  0.8326247935  0.8326247935  0.8326247935 #>  [235,] -2.7544539369 -2.7544539369 -2.7544539369 #>  [236,] -0.7711489501 -0.7711489501 -0.7711489501 #>  [237,]  2.1222612217  2.1222612217  2.1222612217 #>  [238,]  0.1947234221  0.1947234221  0.1947234221 #>  [239,] -1.1144195291 -1.1144195291 -1.1144195291 #>  [240,]  0.3352564708  0.3352564708  0.3352564708 #>  [241,] -0.6702600546 -0.6702600546 -0.6702600546 #>  [242,]  1.3753831754  1.3753831754  1.3753831754 #>  [243,]  2.2730284290  2.2730284290  2.2730284290 #>  [244,]  2.6645635789  2.6645635789  2.6645635789 #>  [245,] -2.2237440716 -2.2237440716 -2.2237440716 #>  [246,]  0.6643715724  0.6643715724  0.6643715724 #>  [247,]  0.2111992773  0.2111992773  0.2111992773 #>  [248,] -1.2128635438 -1.2128635438 -1.2128635438 #>  [249,] -0.0903205953 -0.0903205953 -0.0903205953 #>  [250,] -1.7705689144 -1.7705689144 -1.7705689144 #>  [251,] -2.7541505384 -2.7541505384 -2.7541505384 #>  [252,] -0.9075087864 -0.9075087864 -0.9075087864 #>  [253,]  0.1386878779  0.1386878779  0.1386878779 #>  [254,]  0.7363067591  0.7363067591  0.7363067591 #>  [255,] -0.4427593319 -0.4427593319 -0.4427593319 #>  [256,] -1.1156702288 -1.1156702288 -1.1156702288 #>  [257,] -0.0153272238 -0.0153272238 -0.0153272238 #>  [258,] -2.3464453668 -2.3464453668 -2.3464453668 #>  [259,]  0.5681734253  0.5681734253  0.5681734253 #>  [260,] -2.4158498868 -2.4158498868 -2.4158498868 #>  [261,]  0.2753182744  0.2753182744  0.2753182744 #>  [262,]  2.4742493806  2.4742493806  2.4742493806 #>  [263,]  0.7486599784  0.7486599784  0.7486599784 #>  [264,]  0.8948575151  0.8948575151  0.8948575151 #>  [265,] -3.5233052578 -3.5233052578 -3.5233052578 #>  [266,] -1.6848420547 -1.6848420547 -1.6848420547 #>  [267,] -0.9318068783 -0.9318068783 -0.9318068783 #>  [268,] -2.8192831706 -2.8192831706 -2.8192831706 #>  [269,]  0.1098819007  0.1098819007  0.1098819007 #>  [270,]  0.6332697203  0.6332697203  0.6332697203 #>  [271,]  0.5732487283  0.5732487283  0.5732487283 #>  [272,]  1.0387559896  1.0387559896  1.0387559896 #>  [273,]  1.4839524940  1.4839524940  1.4839524940 #>  [274,]  0.7543696625  0.7543696625  0.7543696625 #>  [275,]  0.5061546843  0.5061546843  0.5061546843 #>  [276,] -0.9039528692 -0.9039528692 -0.9039528692 #>  [277,] -0.5478363684 -0.5478363684 -0.5478363684 #>  [278,]  0.1166785754  0.1166785754  0.1166785754 #>  [279,] -0.1267028101 -0.1267028101 -0.1267028101 #>  [280,] -1.1185029037 -1.1185029037 -1.1185029037 #>  [281,] -1.0276025089 -1.0276025089 -1.0276025089 #>  [282,] -1.8025445834 -1.8025445834 -1.8025445834 #>  [283,] -3.0241276767 -3.0241276767 -3.0241276767 #>  [284,]  0.8175535069  0.8175535069  0.8175535069 #>  [285,]  0.7345423752  0.7345423752  0.7345423752 #>  [286,]  2.9807136440  2.9807136440  2.9807136440 #>  [287,] -1.7633297314 -1.7633297314 -1.7633297314 #>  [288,]  1.7820967090  1.7820967090  1.7820967090 #>  [289,] -2.6897532533 -2.6897532533 -2.6897532533 #>  [290,] -1.9267193322 -1.9267193322 -1.9267193322 #>  [291,]  1.3765274312  1.3765274312  1.3765274312 #>  [292,] -2.7473072389 -2.7473072389 -2.7473072389 #>  [293,] -2.0981871884 -2.0981871884 -2.0981871884 #>  [294,] -1.3386250578 -1.3386250578 -1.3386250578 #>  [295,] -1.6495026546 -1.6495026546 -1.6495026546 #>  [296,]  0.7271247626  0.7271247626  0.7271247626 #>  [297,] -0.3760531432 -0.3760531432 -0.3760531432 #>  [298,]  3.0079019940  3.0079019940  3.0079019940 #>  [299,]  0.6339680437  0.6339680437  0.6339680437 #>  [300,] -0.1681017287 -0.1681017287 -0.1681017287 #>  [301,]  0.8392188259  0.8392188259  0.8392188259 #>  [302,]  0.0647900542  0.0647900542  0.0647900542 #>  [303,] -0.2865079113 -0.2865079113 -0.2865079113 #>  [304,]  0.3198018829  0.3198018829  0.3198018829 #>  [305,] -1.4872184252 -1.4872184252 -1.4872184252 #>  [306,] -2.8325578658 -2.8325578658 -2.8325578658 #>  [307,]  1.8658286974  1.8658286974  1.8658286974 #>  [308,]  0.2815269294  0.2815269294  0.2815269294 #>  [309,]  2.0614379277  2.0614379277  2.0614379277 #>  [310,] -1.9565021555 -1.9565021555 -1.9565021555 #>  [311,] -1.2696405655 -1.2696405655 -1.2696405655 #>  [312,] -0.0884776849 -0.0884776849 -0.0884776849 #>  [313,] -0.2629123442 -0.2629123442 -0.2629123442 #>  [314,] -0.9475134768 -0.9475134768 -0.9475134768 #>  [315,]  3.5586860512  3.5586860512  3.5586860512 #>  [316,] -0.7679478028 -0.7679478028 -0.7679478028 #>  [317,] -0.7835007519 -0.7835007519 -0.7835007519 #>  [318,] -3.4300716311 -3.4300716311 -3.4300716311 #>  [319,]  0.3701204013  0.3701204013  0.3701204013 #>  [320,]  0.2574144901  0.2574144901  0.2574144901 #>  [321,]  1.9775510498  1.9775510498  1.9775510498 #>  [322,]  1.4516772647  1.4516772647  1.4516772647 #>  [323,]  0.7143802477  0.7143802477  0.7143802477 #>  [324,] -2.5333232208 -2.5333232208 -2.5333232208 #>  [325,]  1.1493114757  1.1493114757  1.1493114757 #>  [326,]  1.1495537560  1.1495537560  1.1495537560 #>  [327,] -0.6777746473 -0.6777746473 -0.6777746473 #>  [328,]  2.0269313180  2.0269313180  2.0269313180 #>  [329,]  2.5526643573  2.5526643573  2.5526643573 #>  [330,]  0.2309324951  0.2309324951  0.2309324951 #>  [331,]  2.5695464927  2.5695464927  2.5695464927 #>  [332,]  1.5448881424  1.5448881424  1.5448881424 #>  [333,] -0.7863377242 -0.7863377242 -0.7863377242 #>  [ reached getOption(\"max.print\") -- omitted 691 rows ] Z %***% matrix(1:2, 4, 3) # output is also a 1024 by 3 matrix #>                  [,1]          [,2]          [,3] #>    [1,]  1.5613544682  1.5613544682  1.5613544682 #>    [2,] -0.3320104579 -0.3320104579 -0.3320104579 #>    [3,]  0.8668842716  0.8668842716  0.8668842716 #>    [4,] -0.7398596545 -0.7398596545 -0.7398596545 #>    [5,] -0.1376359193 -0.1376359193 -0.1376359193 #>    [6,]  1.7237865698  1.7237865698  1.7237865698 #>    [7,]  1.3897231515  1.3897231515  1.3897231515 #>    [8,] -1.9152729029 -1.9152729029 -1.9152729029 #>    [9,]  0.6415221947  0.6415221947  0.6415221947 #>   [10,] -0.5284129688 -0.5284129688 -0.5284129688 #>   [11,]  2.1679802577  2.1679802577  2.1679802577 #>   [12,]  0.5683097854  0.5683097854  0.5683097854 #>   [13,]  0.9667882925  0.9667882925  0.9667882925 #>   [14,] -0.5683727607 -0.5683727607 -0.5683727607 #>   [15,] -1.0479279654 -1.0479279654 -1.0479279654 #>   [16,]  3.1886983541  3.1886983541  3.1886983541 #>   [17,]  0.4394593067  0.4394593067  0.4394593067 #>   [18,]  0.2044191402  0.2044191402  0.2044191402 #>   [19,] -0.6096750580 -0.6096750580 -0.6096750580 #>   [20,]  2.2264269143  2.2264269143  2.2264269143 #>   [21,]  3.0123957473  3.0123957473  3.0123957473 #>   [22,]  1.4782326758  1.4782326758  1.4782326758 #>   [23,]  0.8118464222  0.8118464222  0.8118464222 #>   [24,] -0.1950520311 -0.1950520311 -0.1950520311 #>   [25,]  0.8490572123  0.8490572123  0.8490572123 #>   [26,] -3.4734440566 -3.4734440566 -3.4734440566 #>   [27,]  0.2810872077  0.2810872077  0.2810872077 #>   [28,] -0.3771254591 -0.3771254591 -0.3771254591 #>   [29,] -1.4815310660 -1.4815310660 -1.4815310660 #>   [30,]  1.3326792632  1.3326792632  1.3326792632 #>   [31,] -1.2742775921 -1.2742775921 -1.2742775921 #>   [32,]  0.1777682140  0.1777682140  0.1777682140 #>   [33,]  0.2185260920  0.2185260920  0.2185260920 #>   [34,] -1.2163687114 -1.2163687114 -1.2163687114 #>   [35,]  0.6228953122  0.6228953122  0.6228953122 #>   [36,]  0.2529646011  0.2529646011  0.2529646011 #>   [37,] -2.1043140245 -2.1043140245 -2.1043140245 #>   [38,]  3.8380474673  3.8380474673  3.8380474673 #>   [39,] -2.4498752154 -2.4498752154 -2.4498752154 #>   [40,] -1.8330793286 -1.8330793286 -1.8330793286 #>   [41,]  0.9068227069  0.9068227069  0.9068227069 #>   [42,] -0.9024840440 -0.9024840440 -0.9024840440 #>   [43,]  0.7275018182  0.7275018182  0.7275018182 #>   [44,] -1.3145477135 -1.3145477135 -1.3145477135 #>   [45,] -2.0395530640 -2.0395530640 -2.0395530640 #>   [46,]  1.6364728773  1.6364728773  1.6364728773 #>   [47,]  0.6330070047  0.6330070047  0.6330070047 #>   [48,] -2.9606394303 -2.9606394303 -2.9606394303 #>   [49,]  0.8083671424  0.8083671424  0.8083671424 #>   [50,]  0.2923357460  0.2923357460  0.2923357460 #>   [51,] -1.1102995626 -1.1102995626 -1.1102995626 #>   [52,] -1.2754148978 -1.2754148978 -1.2754148978 #>   [53,] -0.4535699157 -0.4535699157 -0.4535699157 #>   [54,] -2.0216098431 -2.0216098431 -2.0216098431 #>   [55,] -0.6312400499 -0.6312400499 -0.6312400499 #>   [56,] -0.3780396889 -0.3780396889 -0.3780396889 #>   [57,] -0.3597033226 -0.3597033226 -0.3597033226 #>   [58,] -2.0864963418 -2.0864963418 -2.0864963418 #>   [59,]  0.2755661184  0.2755661184  0.2755661184 #>   [60,] -2.5713056260 -2.5713056260 -2.5713056260 #>   [61,] -2.1428644037 -2.1428644037 -2.1428644037 #>   [62,] -0.1873421487 -0.1873421487 -0.1873421487 #>   [63,]  1.7672687067  1.7672687067  1.7672687067 #>   [64,]  0.0710875262  0.0710875262  0.0710875262 #>   [65,]  1.9140477524  1.9140477524  1.9140477524 #>   [66,]  0.5233215242  0.5233215242  0.5233215242 #>   [67,] -2.3342821702 -2.3342821702 -2.3342821702 #>   [68,]  1.6856750817  1.6856750817  1.6856750817 #>   [69,] -0.5699913000 -0.5699913000 -0.5699913000 #>   [70,]  1.2572466741  1.2572466741  1.2572466741 #>   [71,]  0.5881237729  0.5881237729  0.5881237729 #>   [72,] -2.4256097823 -2.4256097823 -2.4256097823 #>   [73,]  0.9202203436  0.9202203436  0.9202203436 #>   [74,] -1.5387447210 -1.5387447210 -1.5387447210 #>   [75,] -0.0104291836 -0.0104291836 -0.0104291836 #>   [76,]  0.8396740390  0.8396740390  0.8396740390 #>   [77,]  2.2552764552  2.2552764552  2.2552764552 #>   [78,] -0.2884830335 -0.2884830335 -0.2884830335 #>   [79,] -1.6577154347 -1.6577154347 -1.6577154347 #>   [80,] -0.6717310682 -0.6717310682 -0.6717310682 #>   [81,]  1.9882907244  1.9882907244  1.9882907244 #>   [82,]  1.0015226282  1.0015226282  1.0015226282 #>   [83,]  0.0725748399  0.0725748399  0.0725748399 #>   [84,] -1.2166789870 -1.2166789870 -1.2166789870 #>   [85,]  1.3986873146  1.3986873146  1.3986873146 #>   [86,]  1.8524652725  1.8524652725  1.8524652725 #>   [87,] -1.0337976814 -1.0337976814 -1.0337976814 #>   [88,]  0.1656457054  0.1656457054  0.1656457054 #>   [89,]  0.6382953580  0.6382953580  0.6382953580 #>   [90,] -3.0884964319 -3.0884964319 -3.0884964319 #>   [91,] -1.4259958269 -1.4259958269 -1.4259958269 #>   [92,] -2.8196294519 -2.8196294519 -2.8196294519 #>   [93,]  1.5391727682  1.5391727682  1.5391727682 #>   [94,]  1.4417293899  1.4417293899  1.4417293899 #>   [95,]  1.5480195197  1.5480195197  1.5480195197 #>   [96,] -2.0876635433 -2.0876635433 -2.0876635433 #>   [97,]  1.5763568064  1.5763568064  1.5763568064 #>   [98,]  0.4113960130  0.4113960130  0.4113960130 #>   [99,] -0.4746246570 -0.4746246570 -0.4746246570 #>  [100,] -1.0675753250 -1.0675753250 -1.0675753250 #>  [101,]  0.2337661640  0.2337661640  0.2337661640 #>  [102,] -2.1976169093 -2.1976169093 -2.1976169093 #>  [103,] -0.2742653864 -0.2742653864 -0.2742653864 #>  [104,]  1.7367123273  1.7367123273  1.7367123273 #>  [105,]  1.0300807222  1.0300807222  1.0300807222 #>  [106,]  0.3614069713  0.3614069713  0.3614069713 #>  [107,]  0.5586422250  0.5586422250  0.5586422250 #>  [108,] -0.0045459702 -0.0045459702 -0.0045459702 #>  [109,] -0.4563865191 -0.4563865191 -0.4563865191 #>  [110,] -0.9174921505 -0.9174921505 -0.9174921505 #>  [111,] -0.0664723090 -0.0664723090 -0.0664723090 #>  [112,] -1.6897189380 -1.6897189380 -1.6897189380 #>  [113,]  1.1241750655  1.1241750655  1.1241750655 #>  [114,] -0.4774490437 -0.4774490437 -0.4774490437 #>  [115,] -1.8865987134 -1.8865987134 -1.8865987134 #>  [116,]  2.7774988520  2.7774988520  2.7774988520 #>  [117,]  1.8179062591  1.8179062591  1.8179062591 #>  [118,]  1.3220224143  1.3220224143  1.3220224143 #>  [119,] -1.5345998739 -1.5345998739 -1.5345998739 #>  [120,] -2.1030821378 -2.1030821378 -2.1030821378 #>  [121,]  2.5946400267  2.5946400267  2.5946400267 #>  [122,] -4.7753677692 -4.7753677692 -4.7753677692 #>  [123,] -0.3836723087 -0.3836723087 -0.3836723087 #>  [124,] -2.2632443070 -2.2632443070 -2.2632443070 #>  [125,] -0.4663961904 -0.4663961904 -0.4663961904 #>  [126,] -2.1355112622 -2.1355112622 -2.1355112622 #>  [127,] -0.9281483502 -0.9281483502 -0.9281483502 #>  [128,]  0.9167997606  0.9167997606  0.9167997606 #>  [129,]  4.6041839635  4.6041839635  4.6041839635 #>  [130,]  2.4280816863  2.4280816863  2.4280816863 #>  [131,]  0.4361540840  0.4361540840  0.4361540840 #>  [132,]  2.1458239306  2.1458239306  2.1458239306 #>  [133,]  2.9002416661  2.9002416661  2.9002416661 #>  [134,] -1.0878517361 -1.0878517361 -1.0878517361 #>  [135,] -2.3466815636 -2.3466815636 -2.3466815636 #>  [136,]  0.0765932579  0.0765932579  0.0765932579 #>  [137,] -0.7458960933 -0.7458960933 -0.7458960933 #>  [138,]  1.0229575382  1.0229575382  1.0229575382 #>  [139,] -1.4404611367 -1.4404611367 -1.4404611367 #>  [140,]  1.4656138020  1.4656138020  1.4656138020 #>  [141,]  2.2989469212  2.2989469212  2.2989469212 #>  [142,]  1.5973241005  1.5973241005  1.5973241005 #>  [143,]  1.9641286704  1.9641286704  1.9641286704 #>  [144,] -0.3357856563 -0.3357856563 -0.3357856563 #>  [145,]  1.9773566057  1.9773566057  1.9773566057 #>  [146,]  0.1287231450  0.1287231450  0.1287231450 #>  [147,] -0.7109526039 -0.7109526039 -0.7109526039 #>  [148,]  1.9910088607  1.9910088607  1.9910088607 #>  [149,]  2.5609953398  2.5609953398  2.5609953398 #>  [150,]  0.1846389978  0.1846389978  0.1846389978 #>  [151,]  2.4080010470  2.4080010470  2.4080010470 #>  [152,] -1.6844947416 -1.6844947416 -1.6844947416 #>  [153,]  0.9448002129  0.9448002129  0.9448002129 #>  [154,] -1.2660624928 -1.2660624928 -1.2660624928 #>  [155,]  0.7908321404  0.7908321404  0.7908321404 #>  [156,]  0.1122207271  0.1122207271  0.1122207271 #>  [157,] -1.8587628317 -1.8587628317 -1.8587628317 #>  [158,] -1.5071530601 -1.5071530601 -1.5071530601 #>  [159,]  1.8739990455  1.8739990455  1.8739990455 #>  [160,]  3.4279757551  3.4279757551  3.4279757551 #>  [161,]  0.6638520569  0.6638520569  0.6638520569 #>  [162,]  0.0482050973  0.0482050973  0.0482050973 #>  [163,] -1.8681684237 -1.8681684237 -1.8681684237 #>  [164,]  0.7814157375  0.7814157375  0.7814157375 #>  [165,]  0.5871628678  0.5871628678  0.5871628678 #>  [166,]  1.6588656773  1.6588656773  1.6588656773 #>  [167,]  0.6844394330  0.6844394330  0.6844394330 #>  [168,] -0.1454636125 -0.1454636125 -0.1454636125 #>  [169,]  1.3276212229  1.3276212229  1.3276212229 #>  [170,]  0.0619293020  0.0619293020  0.0619293020 #>  [171,]  1.0790231890  1.0790231890  1.0790231890 #>  [172,] -1.8032760330 -1.8032760330 -1.8032760330 #>  [173,]  1.8690920410  1.8690920410  1.8690920410 #>  [174,]  0.8774310172  0.8774310172  0.8774310172 #>  [175,] -0.9302953803 -0.9302953803 -0.9302953803 #>  [176,] -1.0516304506 -1.0516304506 -1.0516304506 #>  [177,]  0.2979350013  0.2979350013  0.2979350013 #>  [178,]  0.0774877238  0.0774877238  0.0774877238 #>  [179,]  1.3667734939  1.3667734939  1.3667734939 #>  [180,] -2.2378580767 -2.2378580767 -2.2378580767 #>  [181,]  1.1909175856  1.1909175856  1.1909175856 #>  [182,]  0.0974681958  0.0974681958  0.0974681958 #>  [183,]  0.0210380793  0.0210380793  0.0210380793 #>  [184,]  1.2797856428  1.2797856428  1.2797856428 #>  [185,] -0.9273881962 -0.9273881962 -0.9273881962 #>  [186,]  0.1859988516  0.1859988516  0.1859988516 #>  [187,]  2.0667993880  2.0667993880  2.0667993880 #>  [188,]  2.1246689578  2.1246689578  2.1246689578 #>  [189,] -1.2790586279 -1.2790586279 -1.2790586279 #>  [190,] -0.2392797032 -0.2392797032 -0.2392797032 #>  [191,]  1.8106317160  1.8106317160  1.8106317160 #>  [192,] -2.4902887890 -2.4902887890 -2.4902887890 #>  [193,] -2.0283650108 -2.0283650108 -2.0283650108 #>  [194,]  1.2366519827  1.2366519827  1.2366519827 #>  [195,] -0.4649959637 -0.4649959637 -0.4649959637 #>  [196,] -0.8386175992 -0.8386175992 -0.8386175992 #>  [197,]  0.7275400452  0.7275400452  0.7275400452 #>  [198,]  0.5606813444  0.5606813444  0.5606813444 #>  [199,]  1.5484212996  1.5484212996  1.5484212996 #>  [200,]  4.1495994996  4.1495994996  4.1495994996 #>  [201,]  0.3538982774  0.3538982774  0.3538982774 #>  [202,] -3.9271254191 -3.9271254191 -3.9271254191 #>  [203,] -0.8052943021 -0.8052943021 -0.8052943021 #>  [204,]  3.0247217767  3.0247217767  3.0247217767 #>  [205,]  1.3831006767  1.3831006767  1.3831006767 #>  [206,] -2.9330780345 -2.9330780345 -2.9330780345 #>  [207,] -1.1549787549 -1.1549787549 -1.1549787549 #>  [208,] -1.2516783106 -1.2516783106 -1.2516783106 #>  [209,]  1.9514733444  1.9514733444  1.9514733444 #>  [210,]  0.2379130054  0.2379130054  0.2379130054 #>  [211,] -1.1982540108 -1.1982540108 -1.1982540108 #>  [212,]  1.7346093749  1.7346093749  1.7346093749 #>  [213,]  0.6102780971  0.6102780971  0.6102780971 #>  [214,] -0.0169038270 -0.0169038270 -0.0169038270 #>  [215,]  2.6425404146  2.6425404146  2.6425404146 #>  [216,]  0.2319015951  0.2319015951  0.2319015951 #>  [217,]  0.1306587529  0.1306587529  0.1306587529 #>  [218,]  0.2159798566  0.2159798566  0.2159798566 #>  [219,]  1.8741904597  1.8741904597  1.8741904597 #>  [220,] -1.1373311223 -1.1373311223 -1.1373311223 #>  [221,]  0.2867476303  0.2867476303  0.2867476303 #>  [222,] -3.3167651869 -3.3167651869 -3.3167651869 #>  [223,] -0.6472349037 -0.6472349037 -0.6472349037 #>  [224,]  0.8703245665  0.8703245665  0.8703245665 #>  [225,] -0.6981325003 -0.6981325003 -0.6981325003 #>  [226,]  0.5889908768  0.5889908768  0.5889908768 #>  [227,] -2.3865063159 -2.3865063159 -2.3865063159 #>  [228,] -0.2491391371 -0.2491391371 -0.2491391371 #>  [229,]  0.1036564266  0.1036564266  0.1036564266 #>  [230,]  2.0300800181  2.0300800181  2.0300800181 #>  [231,]  2.7195292403  2.7195292403  2.7195292403 #>  [232,] -0.7839505791 -0.7839505791 -0.7839505791 #>  [233,]  1.0316857345  1.0316857345  1.0316857345 #>  [234,]  0.8326247935  0.8326247935  0.8326247935 #>  [235,] -2.7544539369 -2.7544539369 -2.7544539369 #>  [236,] -0.7711489501 -0.7711489501 -0.7711489501 #>  [237,]  2.1222612217  2.1222612217  2.1222612217 #>  [238,]  0.1947234221  0.1947234221  0.1947234221 #>  [239,] -1.1144195291 -1.1144195291 -1.1144195291 #>  [240,]  0.3352564708  0.3352564708  0.3352564708 #>  [241,] -0.6702600546 -0.6702600546 -0.6702600546 #>  [242,]  1.3753831754  1.3753831754  1.3753831754 #>  [243,]  2.2730284290  2.2730284290  2.2730284290 #>  [244,]  2.6645635789  2.6645635789  2.6645635789 #>  [245,] -2.2237440716 -2.2237440716 -2.2237440716 #>  [246,]  0.6643715724  0.6643715724  0.6643715724 #>  [247,]  0.2111992773  0.2111992773  0.2111992773 #>  [248,] -1.2128635438 -1.2128635438 -1.2128635438 #>  [249,] -0.0903205953 -0.0903205953 -0.0903205953 #>  [250,] -1.7705689144 -1.7705689144 -1.7705689144 #>  [251,] -2.7541505384 -2.7541505384 -2.7541505384 #>  [252,] -0.9075087864 -0.9075087864 -0.9075087864 #>  [253,]  0.1386878779  0.1386878779  0.1386878779 #>  [254,]  0.7363067591  0.7363067591  0.7363067591 #>  [255,] -0.4427593319 -0.4427593319 -0.4427593319 #>  [256,] -1.1156702288 -1.1156702288 -1.1156702288 #>  [257,] -0.0153272238 -0.0153272238 -0.0153272238 #>  [258,] -2.3464453668 -2.3464453668 -2.3464453668 #>  [259,]  0.5681734253  0.5681734253  0.5681734253 #>  [260,] -2.4158498868 -2.4158498868 -2.4158498868 #>  [261,]  0.2753182744  0.2753182744  0.2753182744 #>  [262,]  2.4742493806  2.4742493806  2.4742493806 #>  [263,]  0.7486599784  0.7486599784  0.7486599784 #>  [264,]  0.8948575151  0.8948575151  0.8948575151 #>  [265,] -3.5233052578 -3.5233052578 -3.5233052578 #>  [266,] -1.6848420547 -1.6848420547 -1.6848420547 #>  [267,] -0.9318068783 -0.9318068783 -0.9318068783 #>  [268,] -2.8192831706 -2.8192831706 -2.8192831706 #>  [269,]  0.1098819007  0.1098819007  0.1098819007 #>  [270,]  0.6332697203  0.6332697203  0.6332697203 #>  [271,]  0.5732487283  0.5732487283  0.5732487283 #>  [272,]  1.0387559896  1.0387559896  1.0387559896 #>  [273,]  1.4839524940  1.4839524940  1.4839524940 #>  [274,]  0.7543696625  0.7543696625  0.7543696625 #>  [275,]  0.5061546843  0.5061546843  0.5061546843 #>  [276,] -0.9039528692 -0.9039528692 -0.9039528692 #>  [277,] -0.5478363684 -0.5478363684 -0.5478363684 #>  [278,]  0.1166785754  0.1166785754  0.1166785754 #>  [279,] -0.1267028101 -0.1267028101 -0.1267028101 #>  [280,] -1.1185029037 -1.1185029037 -1.1185029037 #>  [281,] -1.0276025089 -1.0276025089 -1.0276025089 #>  [282,] -1.8025445834 -1.8025445834 -1.8025445834 #>  [283,] -3.0241276767 -3.0241276767 -3.0241276767 #>  [284,]  0.8175535069  0.8175535069  0.8175535069 #>  [285,]  0.7345423752  0.7345423752  0.7345423752 #>  [286,]  2.9807136440  2.9807136440  2.9807136440 #>  [287,] -1.7633297314 -1.7633297314 -1.7633297314 #>  [288,]  1.7820967090  1.7820967090  1.7820967090 #>  [289,] -2.6897532533 -2.6897532533 -2.6897532533 #>  [290,] -1.9267193322 -1.9267193322 -1.9267193322 #>  [291,]  1.3765274312  1.3765274312  1.3765274312 #>  [292,] -2.7473072389 -2.7473072389 -2.7473072389 #>  [293,] -2.0981871884 -2.0981871884 -2.0981871884 #>  [294,] -1.3386250578 -1.3386250578 -1.3386250578 #>  [295,] -1.6495026546 -1.6495026546 -1.6495026546 #>  [296,]  0.7271247626  0.7271247626  0.7271247626 #>  [297,] -0.3760531432 -0.3760531432 -0.3760531432 #>  [298,]  3.0079019940  3.0079019940  3.0079019940 #>  [299,]  0.6339680437  0.6339680437  0.6339680437 #>  [300,] -0.1681017287 -0.1681017287 -0.1681017287 #>  [301,]  0.8392188259  0.8392188259  0.8392188259 #>  [302,]  0.0647900542  0.0647900542  0.0647900542 #>  [303,] -0.2865079113 -0.2865079113 -0.2865079113 #>  [304,]  0.3198018829  0.3198018829  0.3198018829 #>  [305,] -1.4872184252 -1.4872184252 -1.4872184252 #>  [306,] -2.8325578658 -2.8325578658 -2.8325578658 #>  [307,]  1.8658286974  1.8658286974  1.8658286974 #>  [308,]  0.2815269294  0.2815269294  0.2815269294 #>  [309,]  2.0614379277  2.0614379277  2.0614379277 #>  [310,] -1.9565021555 -1.9565021555 -1.9565021555 #>  [311,] -1.2696405655 -1.2696405655 -1.2696405655 #>  [312,] -0.0884776849 -0.0884776849 -0.0884776849 #>  [313,] -0.2629123442 -0.2629123442 -0.2629123442 #>  [314,] -0.9475134768 -0.9475134768 -0.9475134768 #>  [315,]  3.5586860512  3.5586860512  3.5586860512 #>  [316,] -0.7679478028 -0.7679478028 -0.7679478028 #>  [317,] -0.7835007519 -0.7835007519 -0.7835007519 #>  [318,] -3.4300716311 -3.4300716311 -3.4300716311 #>  [319,]  0.3701204013  0.3701204013  0.3701204013 #>  [320,]  0.2574144901  0.2574144901  0.2574144901 #>  [321,]  1.9775510498  1.9775510498  1.9775510498 #>  [322,]  1.4516772647  1.4516772647  1.4516772647 #>  [323,]  0.7143802477  0.7143802477  0.7143802477 #>  [324,] -2.5333232208 -2.5333232208 -2.5333232208 #>  [325,]  1.1493114757  1.1493114757  1.1493114757 #>  [326,]  1.1495537560  1.1495537560  1.1495537560 #>  [327,] -0.6777746473 -0.6777746473 -0.6777746473 #>  [328,]  2.0269313180  2.0269313180  2.0269313180 #>  [329,]  2.5526643573  2.5526643573  2.5526643573 #>  [330,]  0.2309324951  0.2309324951  0.2309324951 #>  [331,]  2.5695464927  2.5695464927  2.5695464927 #>  [332,]  1.5448881424  1.5448881424  1.5448881424 #>  [333,] -0.7863377242 -0.7863377242 -0.7863377242 #>  [ reached getOption(\"max.print\") -- omitted 691 rows ]"},{"path":"https://tomessilva.github.io/fort/reference/solve.FastTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Solve a System of Equations — solve.FastTransform","title":"Solve a System of Equations — solve.FastTransform","text":"Solves equation form %*% x = b x, linear operation represented FastTransform object, b can either vector matrix. b missing, returns FastTransform object corresponding inverse (generalized inverse) .","code":""},{"path":"https://tomessilva.github.io/fort/reference/solve.FastTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Solve a System of Equations — solve.FastTransform","text":"","code":"# S3 method for FastTransform solve(a, b, ...)"},{"path":"https://tomessilva.github.io/fort/reference/solve.FastTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Solve a System of Equations — solve.FastTransform","text":"object class FastTransform, created using fort(). b numeric vector matrix (solve equation), nothing (obtain generalized inverse ). ... Extra parameters (ignored).","code":""},{"path":"https://tomessilva.github.io/fort/reference/solve.FastTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Solve a System of Equations — solve.FastTransform","text":"Either matrix (representing x), FastTransform object (representing generalized inverse ; parameter b missing).","code":""},{"path":"https://tomessilva.github.io/fort/reference/solve.FastTransform.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Solve a System of Equations — solve.FastTransform","text":"Note inverse transform fast (.e., avoid matrix multiplication) \\(dim\\_in = dim\\_out = blocksize\\).","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/solve.FastTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Solve a System of Equations — solve.FastTransform","text":"","code":"a <- fort(4) inv_a <- solve(a) # inverse of a inv_a %*% diag(4) # applying the inverse of a #>             [,1]       [,2]       [,3]        [,4] #> [1,]  0.21940889  0.9235253  0.3088537 -0.05975099 #> [2,]  0.97155392 -0.1972669 -0.1131203 -0.06612512 #> [3,] -0.05975099  0.3088537 -0.9235253 -0.21940889 #> [4,] -0.06612512 -0.1131203  0.1972669 -0.97155392 solve(a, diag(4)) # should give the same output #>             [,1]       [,2]       [,3]        [,4] #> [1,]  0.21940889  0.9235253  0.3088537 -0.05975099 #> [2,]  0.97155392 -0.1972669 -0.1131203 -0.06612512 #> [3,] -0.05975099  0.3088537 -0.9235253 -0.21940889 #> [4,] -0.06612512 -0.1131203  0.1972669 -0.97155392"},{"path":"https://tomessilva.github.io/fort/reference/summary.FastTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Summarize fast transform — summary.FastTransform","title":"Summarize fast transform — summary.FastTransform","text":"Provides summary fast transform created fort() slightly detail information provided using print().","code":""},{"path":"https://tomessilva.github.io/fort/reference/summary.FastTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summarize fast transform — summary.FastTransform","text":"","code":"# S3 method for FastTransform summary(object, ...)"},{"path":"https://tomessilva.github.io/fort/reference/summary.FastTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summarize fast transform — summary.FastTransform","text":"object object class FastTransform, created using fort(). ... Extra parameters (ignored).","code":""},{"path":"https://tomessilva.github.io/fort/reference/summary.FastTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summarize fast transform — summary.FastTransform","text":"input object (invisibly).","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/summary.FastTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summarize fast transform — summary.FastTransform","text":"","code":"summary(fort(3, 17)) #> fort linear operation: R^3 <U+2192> [R^32 <U+2192> fft2 <U+2192> R^32] <U+2192> R^17 #>  ~ input: 3-dimensional column vector(s) (3 × N matrix) #>  ~ output: 17-dimensional column vector(s) (17 × N matrix) #>  ~ type: fft2/FastTransformFFT2 (with an internal blocksize of 32) #>  ~ number of parameters: 145 (instead of 51) #>  ~ apply transform to X via: W %*% X, if W is this object and X is a 3 × N matrix"},{"path":"https://tomessilva.github.io/fort/reference/t.FastTransform.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform Transpose — t.FastTransform","title":"Transform Transpose — t.FastTransform","text":"Given FastTransform object x, t returns transpose x. x represents orthonormal transformation (.e., x$invertible TRUE), FastTransform object (representing transpose x) returned; otherwise, matrix object (representing transpose x) returned, warning.","code":""},{"path":"https://tomessilva.github.io/fort/reference/t.FastTransform.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform Transpose — t.FastTransform","text":"","code":"# S3 method for FastTransform t(x)"},{"path":"https://tomessilva.github.io/fort/reference/t.FastTransform.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform Transpose — t.FastTransform","text":"x object class FastTransform, created using fort().","code":""},{"path":"https://tomessilva.github.io/fort/reference/t.FastTransform.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform Transpose — t.FastTransform","text":"Either object class FastTransform (x$invertible TRUE) matrix.","code":""},{"path":[]},{"path":"https://tomessilva.github.io/fort/reference/t.FastTransform.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform Transpose — t.FastTransform","text":"","code":"(a <- fort(4)) #> fort linear operation: R^4 <U+2192> [fft2] <U+2192> R^4 (b <- t(t(a))) # transpose a twice #> fort linear operation: R^4 <U+2192> [fft2] <U+2192> R^4 # the result below should be close to zero sum((a %*% diag(4) - b %*% diag(4))^2) #> [1] 0"},{"path":"https://tomessilva.github.io/fort/news/index.html","id":"fort-001","dir":"Changelog","previous_headings":"","what":"fort 0.0.1","title":"fort 0.0.1","text":"Initial public version.","code":""}]
